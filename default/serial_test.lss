
serial_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  0000100c  000010a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000100c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001f  0080010e  0080010e  000010ae  2**0
                  ALLOC
  3 .debug_aranges 000000e0  00000000  00000000  000010ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000018e  00000000  00000000  0000118e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000aca  00000000  00000000  0000131c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000643  00000000  00000000  00001de6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007df  00000000  00000000  00002429  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000120  00000000  00000000  00002c08  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002f2  00000000  00000000  00002d28  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000016d  00000000  00000000  0000301a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__ctors_end>
       4:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
       8:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
       c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      10:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      14:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      18:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      1c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      20:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      24:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      28:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      2c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      30:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      34:	0c 94 09 05 	jmp	0xa12	; 0xa12 <__vector_13>
      38:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      3c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      40:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      44:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      48:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      4c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      50:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      54:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      58:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>

0000005c <__c.1778>:
      5c:	6e 61 6e 00                                         nan.

00000060 <__c.1776>:
      60:	69 6e 66 00                                         inf.

00000064 <__c.1675>:
      64:	73 65 72 69 61 6c 5f 74 65 73 74 20 31 2e 31 38     serial_test 1.18
      74:	0d 00                                               ..

00000076 <__c.1519>:
      76:	49 53 52 20 66 69 66 6f 5f 70 75 74 5f 62 79 74     ISR fifo_put_byt
      86:	65 20 45 72 72 6f 72 0d 00 00 40 7a 10 f3 5a 00     e Error...@z..Z.
      96:	a0 72 4e 18 09 00 10 a5 d4 e8 00 00 e8 76 48 17     .rN..........vH.
      a6:	00 00 e4 0b 54 02 00 00 ca 9a 3b 00 00 00 e1 f5     ....T.....;.....
      b6:	05 00 00 80 96 98 00 00 00 40 42 0f 00 00 00 a0     .........@B.....
      c6:	86 01 00 00 00 10 27 00 00 00 00 e8 03 00 00 00     ......'.........
      d6:	00 64 00 00 00 00 00 0a 00 00 00 00 00 01 00 00     .d..............
      e6:	00 00 00 2c 76 d8 88 dc 67 4f 08 23 df c1 df ae     ...,v...gO.#....
      f6:	59 e1 b1 b7 96 e5 e3 e4 53 c6 3a e6 51 99 76 96     Y.......S.:.Q.v.
     106:	e8 e6 c2 84 26 eb 89 8c 9b 62 ed 40 7c 6f fc ef     ....&....b.@|o..
     116:	bc 9c 9f 40 f2 ba a5 6f a5 f4 90 05 5a 2a f7 5c     ...@...o....Z*.\
     126:	93 6b 6c f9 67 6d c1 1b fc e0 e4 0d 47 fe f5 20     .kl.gm......G.. 
     136:	e6 b5 00 d0 ed 90 2e 03 00 94 35 77 05 00 80 84     ..........5w....
     146:	1e 08 00 00 20 4e 0a 00 00 00 c8 0c 33 33 33 33     .... N......3333
     156:	0f 98 6e 12 83 11 41 ef 8d 21 14 89 3b e6 55 16     ..n...A..!..;.U.
     166:	cf fe e6 db 18 d1 84 4b 38 1b f7 7c 1d 90 1d a4     .......K8..|....
     176:	bb e4 24 20 32 84 72 5e 22 81 00 c9 f1 24 ec a1     ..$ 2.r^"....$..
     186:	e5 3d 27 00                                         .='.

0000018a <__ctors_end>:
     18a:	11 24       	eor	r1, r1
     18c:	1f be       	out	0x3f, r1	; 63
     18e:	cf ef       	ldi	r28, 0xFF	; 255
     190:	d4 e0       	ldi	r29, 0x04	; 4
     192:	de bf       	out	0x3e, r29	; 62
     194:	cd bf       	out	0x3d, r28	; 61

00000196 <__do_copy_data>:
     196:	11 e0       	ldi	r17, 0x01	; 1
     198:	a0 e0       	ldi	r26, 0x00	; 0
     19a:	b1 e0       	ldi	r27, 0x01	; 1
     19c:	ec e0       	ldi	r30, 0x0C	; 12
     19e:	f0 e1       	ldi	r31, 0x10	; 16
     1a0:	02 c0       	rjmp	.+4      	; 0x1a6 <.do_copy_data_start>

000001a2 <.do_copy_data_loop>:
     1a2:	05 90       	lpm	r0, Z+
     1a4:	0d 92       	st	X+, r0

000001a6 <.do_copy_data_start>:
     1a6:	ae 30       	cpi	r26, 0x0E	; 14
     1a8:	b1 07       	cpc	r27, r17
     1aa:	d9 f7       	brne	.-10     	; 0x1a2 <.do_copy_data_loop>

000001ac <__do_clear_bss>:
     1ac:	11 e0       	ldi	r17, 0x01	; 1
     1ae:	ae e0       	ldi	r26, 0x0E	; 14
     1b0:	b1 e0       	ldi	r27, 0x01	; 1
     1b2:	01 c0       	rjmp	.+2      	; 0x1b6 <.do_clear_bss_start>

000001b4 <.do_clear_bss_loop>:
     1b4:	1d 92       	st	X+, r1

000001b6 <.do_clear_bss_start>:
     1b6:	ad 32       	cpi	r26, 0x2D	; 45
     1b8:	b1 07       	cpc	r27, r17
     1ba:	e1 f7       	brne	.-8      	; 0x1b4 <.do_clear_bss_loop>
     1bc:	0e 94 6d 04 	call	0x8da	; 0x8da <main>
     1c0:	0c 94 04 08 	jmp	0x1008	; 0x1008 <_exit>

000001c4 <__bad_interrupt>:
     1c4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001c8 <vfprintf>:
     1c8:	a1 e1       	ldi	r26, 0x11	; 17
     1ca:	b0 e0       	ldi	r27, 0x00	; 0
     1cc:	ea ee       	ldi	r30, 0xEA	; 234
     1ce:	f0 e0       	ldi	r31, 0x00	; 0
     1d0:	0c 94 cd 07 	jmp	0xf9a	; 0xf9a <__prologue_saves__>
     1d4:	3c 01       	movw	r6, r24
     1d6:	7f 87       	std	Y+15, r23	; 0x0f
     1d8:	6e 87       	std	Y+14, r22	; 0x0e
     1da:	6a 01       	movw	r12, r20
     1dc:	fc 01       	movw	r30, r24
     1de:	17 82       	std	Z+7, r1	; 0x07
     1e0:	16 82       	std	Z+6, r1	; 0x06
     1e2:	83 81       	ldd	r24, Z+3	; 0x03
     1e4:	81 fd       	sbrc	r24, 1
     1e6:	03 c0       	rjmp	.+6      	; 0x1ee <vfprintf+0x26>
     1e8:	6f ef       	ldi	r22, 0xFF	; 255
     1ea:	7f ef       	ldi	r23, 0xFF	; 255
     1ec:	71 c3       	rjmp	.+1762   	; 0x8d0 <__stack+0x3d1>
     1ee:	9e 01       	movw	r18, r28
     1f0:	2f 5f       	subi	r18, 0xFF	; 255
     1f2:	3f 4f       	sbci	r19, 0xFF	; 255
     1f4:	39 8b       	std	Y+17, r19	; 0x11
     1f6:	28 8b       	std	Y+16, r18	; 0x10
     1f8:	f3 01       	movw	r30, r6
     1fa:	23 81       	ldd	r18, Z+3	; 0x03
     1fc:	ee 85       	ldd	r30, Y+14	; 0x0e
     1fe:	ff 85       	ldd	r31, Y+15	; 0x0f
     200:	23 fd       	sbrc	r18, 3
     202:	85 91       	lpm	r24, Z+
     204:	23 ff       	sbrs	r18, 3
     206:	81 91       	ld	r24, Z+
     208:	ff 87       	std	Y+15, r31	; 0x0f
     20a:	ee 87       	std	Y+14, r30	; 0x0e
     20c:	88 23       	and	r24, r24
     20e:	09 f4       	brne	.+2      	; 0x212 <vfprintf+0x4a>
     210:	5c c3       	rjmp	.+1720   	; 0x8ca <__stack+0x3cb>
     212:	85 32       	cpi	r24, 0x25	; 37
     214:	51 f4       	brne	.+20     	; 0x22a <vfprintf+0x62>
     216:	ee 85       	ldd	r30, Y+14	; 0x0e
     218:	ff 85       	ldd	r31, Y+15	; 0x0f
     21a:	23 fd       	sbrc	r18, 3
     21c:	85 91       	lpm	r24, Z+
     21e:	23 ff       	sbrs	r18, 3
     220:	81 91       	ld	r24, Z+
     222:	ff 87       	std	Y+15, r31	; 0x0f
     224:	ee 87       	std	Y+14, r30	; 0x0e
     226:	85 32       	cpi	r24, 0x25	; 37
     228:	29 f4       	brne	.+10     	; 0x234 <vfprintf+0x6c>
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	b3 01       	movw	r22, r6
     22e:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     232:	e2 cf       	rjmp	.-60     	; 0x1f8 <vfprintf+0x30>
     234:	98 2f       	mov	r25, r24
     236:	10 e0       	ldi	r17, 0x00	; 0
     238:	88 24       	eor	r8, r8
     23a:	99 24       	eor	r9, r9
     23c:	10 32       	cpi	r17, 0x20	; 32
     23e:	b0 f4       	brcc	.+44     	; 0x26c <vfprintf+0xa4>
     240:	9b 32       	cpi	r25, 0x2B	; 43
     242:	69 f0       	breq	.+26     	; 0x25e <vfprintf+0x96>
     244:	9c 32       	cpi	r25, 0x2C	; 44
     246:	28 f4       	brcc	.+10     	; 0x252 <vfprintf+0x8a>
     248:	90 32       	cpi	r25, 0x20	; 32
     24a:	51 f0       	breq	.+20     	; 0x260 <vfprintf+0x98>
     24c:	93 32       	cpi	r25, 0x23	; 35
     24e:	71 f4       	brne	.+28     	; 0x26c <vfprintf+0xa4>
     250:	0b c0       	rjmp	.+22     	; 0x268 <vfprintf+0xa0>
     252:	9d 32       	cpi	r25, 0x2D	; 45
     254:	39 f0       	breq	.+14     	; 0x264 <vfprintf+0x9c>
     256:	90 33       	cpi	r25, 0x30	; 48
     258:	49 f4       	brne	.+18     	; 0x26c <vfprintf+0xa4>
     25a:	11 60       	ori	r17, 0x01	; 1
     25c:	28 c0       	rjmp	.+80     	; 0x2ae <vfprintf+0xe6>
     25e:	12 60       	ori	r17, 0x02	; 2
     260:	14 60       	ori	r17, 0x04	; 4
     262:	25 c0       	rjmp	.+74     	; 0x2ae <vfprintf+0xe6>
     264:	18 60       	ori	r17, 0x08	; 8
     266:	23 c0       	rjmp	.+70     	; 0x2ae <vfprintf+0xe6>
     268:	10 61       	ori	r17, 0x10	; 16
     26a:	21 c0       	rjmp	.+66     	; 0x2ae <vfprintf+0xe6>
     26c:	17 fd       	sbrc	r17, 7
     26e:	2a c0       	rjmp	.+84     	; 0x2c4 <vfprintf+0xfc>
     270:	89 2f       	mov	r24, r25
     272:	80 53       	subi	r24, 0x30	; 48
     274:	8a 30       	cpi	r24, 0x0A	; 10
     276:	78 f4       	brcc	.+30     	; 0x296 <vfprintf+0xce>
     278:	16 ff       	sbrs	r17, 6
     27a:	06 c0       	rjmp	.+12     	; 0x288 <vfprintf+0xc0>
     27c:	fa e0       	ldi	r31, 0x0A	; 10
     27e:	9f 9e       	mul	r9, r31
     280:	90 2c       	mov	r9, r0
     282:	11 24       	eor	r1, r1
     284:	98 0e       	add	r9, r24
     286:	13 c0       	rjmp	.+38     	; 0x2ae <vfprintf+0xe6>
     288:	3a e0       	ldi	r19, 0x0A	; 10
     28a:	83 9e       	mul	r8, r19
     28c:	80 2c       	mov	r8, r0
     28e:	11 24       	eor	r1, r1
     290:	88 0e       	add	r8, r24
     292:	10 62       	ori	r17, 0x20	; 32
     294:	0c c0       	rjmp	.+24     	; 0x2ae <vfprintf+0xe6>
     296:	9e 32       	cpi	r25, 0x2E	; 46
     298:	21 f4       	brne	.+8      	; 0x2a2 <vfprintf+0xda>
     29a:	16 fd       	sbrc	r17, 6
     29c:	16 c3       	rjmp	.+1580   	; 0x8ca <__stack+0x3cb>
     29e:	10 64       	ori	r17, 0x40	; 64
     2a0:	06 c0       	rjmp	.+12     	; 0x2ae <vfprintf+0xe6>
     2a2:	9c 36       	cpi	r25, 0x6C	; 108
     2a4:	11 f4       	brne	.+4      	; 0x2aa <vfprintf+0xe2>
     2a6:	10 68       	ori	r17, 0x80	; 128
     2a8:	02 c0       	rjmp	.+4      	; 0x2ae <vfprintf+0xe6>
     2aa:	98 36       	cpi	r25, 0x68	; 104
     2ac:	59 f4       	brne	.+22     	; 0x2c4 <vfprintf+0xfc>
     2ae:	ee 85       	ldd	r30, Y+14	; 0x0e
     2b0:	ff 85       	ldd	r31, Y+15	; 0x0f
     2b2:	23 fd       	sbrc	r18, 3
     2b4:	95 91       	lpm	r25, Z+
     2b6:	23 ff       	sbrs	r18, 3
     2b8:	91 91       	ld	r25, Z+
     2ba:	ff 87       	std	Y+15, r31	; 0x0f
     2bc:	ee 87       	std	Y+14, r30	; 0x0e
     2be:	99 23       	and	r25, r25
     2c0:	09 f0       	breq	.+2      	; 0x2c4 <vfprintf+0xfc>
     2c2:	bc cf       	rjmp	.-136    	; 0x23c <vfprintf+0x74>
     2c4:	89 2f       	mov	r24, r25
     2c6:	85 54       	subi	r24, 0x45	; 69
     2c8:	83 30       	cpi	r24, 0x03	; 3
     2ca:	20 f4       	brcc	.+8      	; 0x2d4 <vfprintf+0x10c>
     2cc:	81 2f       	mov	r24, r17
     2ce:	80 61       	ori	r24, 0x10	; 16
     2d0:	90 5e       	subi	r25, 0xE0	; 224
     2d2:	07 c0       	rjmp	.+14     	; 0x2e2 <vfprintf+0x11a>
     2d4:	89 2f       	mov	r24, r25
     2d6:	85 56       	subi	r24, 0x65	; 101
     2d8:	83 30       	cpi	r24, 0x03	; 3
     2da:	08 f0       	brcs	.+2      	; 0x2de <vfprintf+0x116>
     2dc:	a1 c1       	rjmp	.+834    	; 0x620 <__stack+0x121>
     2de:	81 2f       	mov	r24, r17
     2e0:	8f 7e       	andi	r24, 0xEF	; 239
     2e2:	86 fd       	sbrc	r24, 6
     2e4:	02 c0       	rjmp	.+4      	; 0x2ea <vfprintf+0x122>
     2e6:	76 e0       	ldi	r23, 0x06	; 6
     2e8:	97 2e       	mov	r9, r23
     2ea:	6f e3       	ldi	r22, 0x3F	; 63
     2ec:	f6 2e       	mov	r15, r22
     2ee:	f8 22       	and	r15, r24
     2f0:	95 36       	cpi	r25, 0x65	; 101
     2f2:	19 f4       	brne	.+6      	; 0x2fa <vfprintf+0x132>
     2f4:	f0 e4       	ldi	r31, 0x40	; 64
     2f6:	ff 2a       	or	r15, r31
     2f8:	07 c0       	rjmp	.+14     	; 0x308 <vfprintf+0x140>
     2fa:	96 36       	cpi	r25, 0x66	; 102
     2fc:	19 f4       	brne	.+6      	; 0x304 <vfprintf+0x13c>
     2fe:	20 e8       	ldi	r18, 0x80	; 128
     300:	f2 2a       	or	r15, r18
     302:	02 c0       	rjmp	.+4      	; 0x308 <vfprintf+0x140>
     304:	91 10       	cpse	r9, r1
     306:	9a 94       	dec	r9
     308:	f7 fe       	sbrs	r15, 7
     30a:	0b c0       	rjmp	.+22     	; 0x322 <vfprintf+0x15a>
     30c:	3b e3       	ldi	r19, 0x3B	; 59
     30e:	39 15       	cp	r19, r9
     310:	20 f4       	brcc	.+8      	; 0x31a <vfprintf+0x152>
     312:	27 e0       	ldi	r18, 0x07	; 7
     314:	5c e3       	ldi	r21, 0x3C	; 60
     316:	b5 2e       	mov	r11, r21
     318:	0e c0       	rjmp	.+28     	; 0x336 <vfprintf+0x16e>
     31a:	b9 2c       	mov	r11, r9
     31c:	b3 94       	inc	r11
     31e:	27 e0       	ldi	r18, 0x07	; 7
     320:	0a c0       	rjmp	.+20     	; 0x336 <vfprintf+0x16e>
     322:	47 e0       	ldi	r20, 0x07	; 7
     324:	49 15       	cp	r20, r9
     326:	28 f4       	brcc	.+10     	; 0x332 <vfprintf+0x16a>
     328:	27 e0       	ldi	r18, 0x07	; 7
     32a:	bb 24       	eor	r11, r11
     32c:	47 e0       	ldi	r20, 0x07	; 7
     32e:	94 2e       	mov	r9, r20
     330:	02 c0       	rjmp	.+4      	; 0x336 <vfprintf+0x16e>
     332:	29 2d       	mov	r18, r9
     334:	bb 24       	eor	r11, r11
     336:	c6 01       	movw	r24, r12
     338:	04 96       	adiw	r24, 0x04	; 4
     33a:	9d 87       	std	Y+13, r25	; 0x0d
     33c:	8c 87       	std	Y+12, r24	; 0x0c
     33e:	f6 01       	movw	r30, r12
     340:	60 81       	ld	r22, Z
     342:	71 81       	ldd	r23, Z+1	; 0x01
     344:	82 81       	ldd	r24, Z+2	; 0x02
     346:	93 81       	ldd	r25, Z+3	; 0x03
     348:	ae 01       	movw	r20, r28
     34a:	4f 5f       	subi	r20, 0xFF	; 255
     34c:	5f 4f       	sbci	r21, 0xFF	; 255
     34e:	0b 2d       	mov	r16, r11
     350:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <__ftoa_engine>
     354:	6c 01       	movw	r12, r24
     356:	09 81       	ldd	r16, Y+1	; 0x01
     358:	20 2e       	mov	r2, r16
     35a:	33 24       	eor	r3, r3
     35c:	00 ff       	sbrs	r16, 0
     35e:	04 c0       	rjmp	.+8      	; 0x368 <vfprintf+0x1a0>
     360:	03 fd       	sbrc	r16, 3
     362:	02 c0       	rjmp	.+4      	; 0x368 <vfprintf+0x1a0>
     364:	1d e2       	ldi	r17, 0x2D	; 45
     366:	09 c0       	rjmp	.+18     	; 0x37a <vfprintf+0x1b2>
     368:	f1 fe       	sbrs	r15, 1
     36a:	02 c0       	rjmp	.+4      	; 0x370 <vfprintf+0x1a8>
     36c:	1b e2       	ldi	r17, 0x2B	; 43
     36e:	05 c0       	rjmp	.+10     	; 0x37a <vfprintf+0x1b2>
     370:	f2 fc       	sbrc	r15, 2
     372:	02 c0       	rjmp	.+4      	; 0x378 <vfprintf+0x1b0>
     374:	10 e0       	ldi	r17, 0x00	; 0
     376:	01 c0       	rjmp	.+2      	; 0x37a <vfprintf+0x1b2>
     378:	10 e2       	ldi	r17, 0x20	; 32
     37a:	c1 01       	movw	r24, r2
     37c:	8c 70       	andi	r24, 0x0C	; 12
     37e:	90 70       	andi	r25, 0x00	; 0
     380:	89 2b       	or	r24, r25
     382:	b9 f1       	breq	.+110    	; 0x3f2 <vfprintf+0x22a>
     384:	11 23       	and	r17, r17
     386:	11 f4       	brne	.+4      	; 0x38c <vfprintf+0x1c4>
     388:	83 e0       	ldi	r24, 0x03	; 3
     38a:	01 c0       	rjmp	.+2      	; 0x38e <vfprintf+0x1c6>
     38c:	84 e0       	ldi	r24, 0x04	; 4
     38e:	88 15       	cp	r24, r8
     390:	10 f0       	brcs	.+4      	; 0x396 <vfprintf+0x1ce>
     392:	88 24       	eor	r8, r8
     394:	0a c0       	rjmp	.+20     	; 0x3aa <vfprintf+0x1e2>
     396:	88 1a       	sub	r8, r24
     398:	f3 fc       	sbrc	r15, 3
     39a:	07 c0       	rjmp	.+14     	; 0x3aa <vfprintf+0x1e2>
     39c:	80 e2       	ldi	r24, 0x20	; 32
     39e:	90 e0       	ldi	r25, 0x00	; 0
     3a0:	b3 01       	movw	r22, r6
     3a2:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     3a6:	8a 94       	dec	r8
     3a8:	c9 f7       	brne	.-14     	; 0x39c <vfprintf+0x1d4>
     3aa:	11 23       	and	r17, r17
     3ac:	29 f0       	breq	.+10     	; 0x3b8 <vfprintf+0x1f0>
     3ae:	81 2f       	mov	r24, r17
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	b3 01       	movw	r22, r6
     3b4:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     3b8:	23 fe       	sbrs	r2, 3
     3ba:	03 c0       	rjmp	.+6      	; 0x3c2 <vfprintf+0x1fa>
     3bc:	0c e5       	ldi	r16, 0x5C	; 92
     3be:	10 e0       	ldi	r17, 0x00	; 0
     3c0:	0e c0       	rjmp	.+28     	; 0x3de <vfprintf+0x216>
     3c2:	00 e6       	ldi	r16, 0x60	; 96
     3c4:	10 e0       	ldi	r17, 0x00	; 0
     3c6:	0b c0       	rjmp	.+22     	; 0x3de <vfprintf+0x216>
     3c8:	e1 14       	cp	r14, r1
     3ca:	f1 04       	cpc	r15, r1
     3cc:	09 f0       	breq	.+2      	; 0x3d0 <vfprintf+0x208>
     3ce:	80 52       	subi	r24, 0x20	; 32
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	b3 01       	movw	r22, r6
     3d4:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     3d8:	0f 5f       	subi	r16, 0xFF	; 255
     3da:	1f 4f       	sbci	r17, 0xFF	; 255
     3dc:	05 c0       	rjmp	.+10     	; 0x3e8 <vfprintf+0x220>
     3de:	ef 2c       	mov	r14, r15
     3e0:	ff 24       	eor	r15, r15
     3e2:	f0 e1       	ldi	r31, 0x10	; 16
     3e4:	ef 22       	and	r14, r31
     3e6:	ff 24       	eor	r15, r15
     3e8:	f8 01       	movw	r30, r16
     3ea:	84 91       	lpm	r24, Z+
     3ec:	88 23       	and	r24, r24
     3ee:	61 f7       	brne	.-40     	; 0x3c8 <vfprintf+0x200>
     3f0:	14 c1       	rjmp	.+552    	; 0x61a <__stack+0x11b>
     3f2:	f7 fe       	sbrs	r15, 7
     3f4:	12 c0       	rjmp	.+36     	; 0x41a <vfprintf+0x252>
     3f6:	bc 0c       	add	r11, r12
     3f8:	24 fe       	sbrs	r2, 4
     3fa:	04 c0       	rjmp	.+8      	; 0x404 <vfprintf+0x23c>
     3fc:	8a 81       	ldd	r24, Y+2	; 0x02
     3fe:	81 33       	cpi	r24, 0x31	; 49
     400:	09 f4       	brne	.+2      	; 0x404 <vfprintf+0x23c>
     402:	ba 94       	dec	r11
     404:	1b 14       	cp	r1, r11
     406:	1c f0       	brlt	.+6      	; 0x40e <vfprintf+0x246>
     408:	bb 24       	eor	r11, r11
     40a:	b3 94       	inc	r11
     40c:	2d c0       	rjmp	.+90     	; 0x468 <vfprintf+0x2a0>
     40e:	f8 e0       	ldi	r31, 0x08	; 8
     410:	fb 15       	cp	r31, r11
     412:	50 f5       	brcc	.+84     	; 0x468 <vfprintf+0x2a0>
     414:	38 e0       	ldi	r19, 0x08	; 8
     416:	b3 2e       	mov	r11, r19
     418:	27 c0       	rjmp	.+78     	; 0x468 <vfprintf+0x2a0>
     41a:	f6 fc       	sbrc	r15, 6
     41c:	25 c0       	rjmp	.+74     	; 0x468 <vfprintf+0x2a0>
     41e:	89 2d       	mov	r24, r9
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	8c 15       	cp	r24, r12
     424:	9d 05       	cpc	r25, r13
     426:	4c f0       	brlt	.+18     	; 0x43a <vfprintf+0x272>
     428:	2c ef       	ldi	r18, 0xFC	; 252
     42a:	c2 16       	cp	r12, r18
     42c:	2f ef       	ldi	r18, 0xFF	; 255
     42e:	d2 06       	cpc	r13, r18
     430:	24 f0       	brlt	.+8      	; 0x43a <vfprintf+0x272>
     432:	30 e8       	ldi	r19, 0x80	; 128
     434:	f3 2a       	or	r15, r19
     436:	01 c0       	rjmp	.+2      	; 0x43a <vfprintf+0x272>
     438:	9a 94       	dec	r9
     43a:	99 20       	and	r9, r9
     43c:	49 f0       	breq	.+18     	; 0x450 <vfprintf+0x288>
     43e:	e2 e0       	ldi	r30, 0x02	; 2
     440:	f0 e0       	ldi	r31, 0x00	; 0
     442:	ec 0f       	add	r30, r28
     444:	fd 1f       	adc	r31, r29
     446:	e9 0d       	add	r30, r9
     448:	f1 1d       	adc	r31, r1
     44a:	80 81       	ld	r24, Z
     44c:	80 33       	cpi	r24, 0x30	; 48
     44e:	a1 f3       	breq	.-24     	; 0x438 <vfprintf+0x270>
     450:	f7 fe       	sbrs	r15, 7
     452:	0a c0       	rjmp	.+20     	; 0x468 <vfprintf+0x2a0>
     454:	b9 2c       	mov	r11, r9
     456:	b3 94       	inc	r11
     458:	89 2d       	mov	r24, r9
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	c8 16       	cp	r12, r24
     45e:	d9 06       	cpc	r13, r25
     460:	14 f0       	brlt	.+4      	; 0x466 <vfprintf+0x29e>
     462:	99 24       	eor	r9, r9
     464:	01 c0       	rjmp	.+2      	; 0x468 <vfprintf+0x2a0>
     466:	9c 18       	sub	r9, r12
     468:	f7 fc       	sbrc	r15, 7
     46a:	03 c0       	rjmp	.+6      	; 0x472 <vfprintf+0x2aa>
     46c:	25 e0       	ldi	r18, 0x05	; 5
     46e:	30 e0       	ldi	r19, 0x00	; 0
     470:	09 c0       	rjmp	.+18     	; 0x484 <vfprintf+0x2bc>
     472:	1c 14       	cp	r1, r12
     474:	1d 04       	cpc	r1, r13
     476:	1c f0       	brlt	.+6      	; 0x47e <vfprintf+0x2b6>
     478:	21 e0       	ldi	r18, 0x01	; 1
     47a:	30 e0       	ldi	r19, 0x00	; 0
     47c:	03 c0       	rjmp	.+6      	; 0x484 <vfprintf+0x2bc>
     47e:	96 01       	movw	r18, r12
     480:	2f 5f       	subi	r18, 0xFF	; 255
     482:	3f 4f       	sbci	r19, 0xFF	; 255
     484:	11 23       	and	r17, r17
     486:	11 f0       	breq	.+4      	; 0x48c <vfprintf+0x2c4>
     488:	2f 5f       	subi	r18, 0xFF	; 255
     48a:	3f 4f       	sbci	r19, 0xFF	; 255
     48c:	99 20       	and	r9, r9
     48e:	29 f0       	breq	.+10     	; 0x49a <vfprintf+0x2d2>
     490:	89 2d       	mov	r24, r9
     492:	90 e0       	ldi	r25, 0x00	; 0
     494:	01 96       	adiw	r24, 0x01	; 1
     496:	28 0f       	add	r18, r24
     498:	39 1f       	adc	r19, r25
     49a:	88 2d       	mov	r24, r8
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	28 17       	cp	r18, r24
     4a0:	39 07       	cpc	r19, r25
     4a2:	14 f0       	brlt	.+4      	; 0x4a8 <vfprintf+0x2e0>
     4a4:	88 24       	eor	r8, r8
     4a6:	01 c0       	rjmp	.+2      	; 0x4aa <vfprintf+0x2e2>
     4a8:	82 1a       	sub	r8, r18
     4aa:	4f 2c       	mov	r4, r15
     4ac:	55 24       	eor	r5, r5
     4ae:	c2 01       	movw	r24, r4
     4b0:	89 70       	andi	r24, 0x09	; 9
     4b2:	90 70       	andi	r25, 0x00	; 0
     4b4:	89 2b       	or	r24, r25
     4b6:	39 f0       	breq	.+14     	; 0x4c6 <vfprintf+0x2fe>
     4b8:	08 c0       	rjmp	.+16     	; 0x4ca <vfprintf+0x302>
     4ba:	80 e2       	ldi	r24, 0x20	; 32
     4bc:	90 e0       	ldi	r25, 0x00	; 0
     4be:	b3 01       	movw	r22, r6
     4c0:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     4c4:	8a 94       	dec	r8
     4c6:	88 20       	and	r8, r8
     4c8:	c1 f7       	brne	.-16     	; 0x4ba <vfprintf+0x2f2>
     4ca:	11 23       	and	r17, r17
     4cc:	29 f0       	breq	.+10     	; 0x4d8 <vfprintf+0x310>
     4ce:	81 2f       	mov	r24, r17
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	b3 01       	movw	r22, r6
     4d4:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     4d8:	43 fe       	sbrs	r4, 3
     4da:	07 c0       	rjmp	.+14     	; 0x4ea <vfprintf+0x322>
     4dc:	08 c0       	rjmp	.+16     	; 0x4ee <vfprintf+0x326>
     4de:	80 e3       	ldi	r24, 0x30	; 48
     4e0:	90 e0       	ldi	r25, 0x00	; 0
     4e2:	b3 01       	movw	r22, r6
     4e4:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     4e8:	8a 94       	dec	r8
     4ea:	88 20       	and	r8, r8
     4ec:	c1 f7       	brne	.-16     	; 0x4de <vfprintf+0x316>
     4ee:	f7 fe       	sbrs	r15, 7
     4f0:	46 c0       	rjmp	.+140    	; 0x57e <__stack+0x7f>
     4f2:	86 01       	movw	r16, r12
     4f4:	d7 fe       	sbrs	r13, 7
     4f6:	02 c0       	rjmp	.+4      	; 0x4fc <vfprintf+0x334>
     4f8:	00 e0       	ldi	r16, 0x00	; 0
     4fa:	10 e0       	ldi	r17, 0x00	; 0
     4fc:	76 01       	movw	r14, r12
     4fe:	08 94       	sec
     500:	e1 1c       	adc	r14, r1
     502:	f1 1c       	adc	r15, r1
     504:	e0 1a       	sub	r14, r16
     506:	f1 0a       	sbc	r15, r17
     508:	41 e0       	ldi	r20, 0x01	; 1
     50a:	50 e0       	ldi	r21, 0x00	; 0
     50c:	4c 0f       	add	r20, r28
     50e:	5d 1f       	adc	r21, r29
     510:	e4 0e       	add	r14, r20
     512:	f5 1e       	adc	r15, r21
     514:	26 01       	movw	r4, r12
     516:	4b 18       	sub	r4, r11
     518:	51 08       	sbc	r5, r1
     51a:	89 2d       	mov	r24, r9
     51c:	90 e0       	ldi	r25, 0x00	; 0
     51e:	aa 24       	eor	r10, r10
     520:	bb 24       	eor	r11, r11
     522:	a8 1a       	sub	r10, r24
     524:	b9 0a       	sbc	r11, r25
     526:	5f ef       	ldi	r21, 0xFF	; 255
     528:	0f 3f       	cpi	r16, 0xFF	; 255
     52a:	15 07       	cpc	r17, r21
     52c:	29 f4       	brne	.+10     	; 0x538 <__stack+0x39>
     52e:	8e e2       	ldi	r24, 0x2E	; 46
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	b3 01       	movw	r22, r6
     534:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     538:	c0 16       	cp	r12, r16
     53a:	d1 06       	cpc	r13, r17
     53c:	34 f0       	brlt	.+12     	; 0x54a <__stack+0x4b>
     53e:	40 16       	cp	r4, r16
     540:	51 06       	cpc	r5, r17
     542:	1c f4       	brge	.+6      	; 0x54a <__stack+0x4b>
     544:	f7 01       	movw	r30, r14
     546:	80 81       	ld	r24, Z
     548:	01 c0       	rjmp	.+2      	; 0x54c <__stack+0x4d>
     54a:	80 e3       	ldi	r24, 0x30	; 48
     54c:	01 50       	subi	r16, 0x01	; 1
     54e:	10 40       	sbci	r17, 0x00	; 0
     550:	08 94       	sec
     552:	e1 1c       	adc	r14, r1
     554:	f1 1c       	adc	r15, r1
     556:	0a 15       	cp	r16, r10
     558:	1b 05       	cpc	r17, r11
     55a:	2c f0       	brlt	.+10     	; 0x566 <__stack+0x67>
     55c:	90 e0       	ldi	r25, 0x00	; 0
     55e:	b3 01       	movw	r22, r6
     560:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     564:	e0 cf       	rjmp	.-64     	; 0x526 <__stack+0x27>
     566:	0c 15       	cp	r16, r12
     568:	1d 05       	cpc	r17, r13
     56a:	39 f4       	brne	.+14     	; 0x57a <__stack+0x7b>
     56c:	9a 81       	ldd	r25, Y+2	; 0x02
     56e:	96 33       	cpi	r25, 0x36	; 54
     570:	18 f4       	brcc	.+6      	; 0x578 <__stack+0x79>
     572:	95 33       	cpi	r25, 0x35	; 53
     574:	11 f4       	brne	.+4      	; 0x57a <__stack+0x7b>
     576:	24 fe       	sbrs	r2, 4
     578:	81 e3       	ldi	r24, 0x31	; 49
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	4b c0       	rjmp	.+150    	; 0x614 <__stack+0x115>
     57e:	8a 81       	ldd	r24, Y+2	; 0x02
     580:	81 33       	cpi	r24, 0x31	; 49
     582:	09 f0       	breq	.+2      	; 0x586 <__stack+0x87>
     584:	0f 7e       	andi	r16, 0xEF	; 239
     586:	90 e0       	ldi	r25, 0x00	; 0
     588:	b3 01       	movw	r22, r6
     58a:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     58e:	99 20       	and	r9, r9
     590:	a1 f0       	breq	.+40     	; 0x5ba <__stack+0xbb>
     592:	8e e2       	ldi	r24, 0x2E	; 46
     594:	90 e0       	ldi	r25, 0x00	; 0
     596:	b3 01       	movw	r22, r6
     598:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     59c:	12 e0       	ldi	r17, 0x02	; 2
     59e:	e1 e0       	ldi	r30, 0x01	; 1
     5a0:	f0 e0       	ldi	r31, 0x00	; 0
     5a2:	ec 0f       	add	r30, r28
     5a4:	fd 1f       	adc	r31, r29
     5a6:	e1 0f       	add	r30, r17
     5a8:	f1 1d       	adc	r31, r1
     5aa:	1f 5f       	subi	r17, 0xFF	; 255
     5ac:	80 81       	ld	r24, Z
     5ae:	90 e0       	ldi	r25, 0x00	; 0
     5b0:	b3 01       	movw	r22, r6
     5b2:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     5b6:	9a 94       	dec	r9
     5b8:	91 f7       	brne	.-28     	; 0x59e <__stack+0x9f>
     5ba:	44 fc       	sbrc	r4, 4
     5bc:	03 c0       	rjmp	.+6      	; 0x5c4 <__stack+0xc5>
     5be:	85 e6       	ldi	r24, 0x65	; 101
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <__stack+0xc9>
     5c4:	85 e4       	ldi	r24, 0x45	; 69
     5c6:	90 e0       	ldi	r25, 0x00	; 0
     5c8:	b3 01       	movw	r22, r6
     5ca:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     5ce:	d7 fc       	sbrc	r13, 7
     5d0:	05 c0       	rjmp	.+10     	; 0x5dc <__stack+0xdd>
     5d2:	c1 14       	cp	r12, r1
     5d4:	d1 04       	cpc	r13, r1
     5d6:	41 f4       	brne	.+16     	; 0x5e8 <__stack+0xe9>
     5d8:	04 ff       	sbrs	r16, 4
     5da:	06 c0       	rjmp	.+12     	; 0x5e8 <__stack+0xe9>
     5dc:	d0 94       	com	r13
     5de:	c1 94       	neg	r12
     5e0:	d1 08       	sbc	r13, r1
     5e2:	d3 94       	inc	r13
     5e4:	8d e2       	ldi	r24, 0x2D	; 45
     5e6:	01 c0       	rjmp	.+2      	; 0x5ea <__stack+0xeb>
     5e8:	8b e2       	ldi	r24, 0x2B	; 43
     5ea:	90 e0       	ldi	r25, 0x00	; 0
     5ec:	b3 01       	movw	r22, r6
     5ee:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     5f2:	80 e3       	ldi	r24, 0x30	; 48
     5f4:	05 c0       	rjmp	.+10     	; 0x600 <__stack+0x101>
     5f6:	8f 5f       	subi	r24, 0xFF	; 255
     5f8:	26 ef       	ldi	r18, 0xF6	; 246
     5fa:	3f ef       	ldi	r19, 0xFF	; 255
     5fc:	c2 0e       	add	r12, r18
     5fe:	d3 1e       	adc	r13, r19
     600:	3a e0       	ldi	r19, 0x0A	; 10
     602:	c3 16       	cp	r12, r19
     604:	d1 04       	cpc	r13, r1
     606:	bc f7       	brge	.-18     	; 0x5f6 <__stack+0xf7>
     608:	90 e0       	ldi	r25, 0x00	; 0
     60a:	b3 01       	movw	r22, r6
     60c:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     610:	c6 01       	movw	r24, r12
     612:	c0 96       	adiw	r24, 0x30	; 48
     614:	b3 01       	movw	r22, r6
     616:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     61a:	cc 84       	ldd	r12, Y+12	; 0x0c
     61c:	dd 84       	ldd	r13, Y+13	; 0x0d
     61e:	52 c1       	rjmp	.+676    	; 0x8c4 <__stack+0x3c5>
     620:	93 36       	cpi	r25, 0x63	; 99
     622:	31 f0       	breq	.+12     	; 0x630 <__stack+0x131>
     624:	93 37       	cpi	r25, 0x73	; 115
     626:	99 f0       	breq	.+38     	; 0x64e <__stack+0x14f>
     628:	93 35       	cpi	r25, 0x53	; 83
     62a:	09 f0       	breq	.+2      	; 0x62e <__stack+0x12f>
     62c:	59 c0       	rjmp	.+178    	; 0x6e0 <__stack+0x1e1>
     62e:	23 c0       	rjmp	.+70     	; 0x676 <__stack+0x177>
     630:	f6 01       	movw	r30, r12
     632:	80 81       	ld	r24, Z
     634:	89 83       	std	Y+1, r24	; 0x01
     636:	5e 01       	movw	r10, r28
     638:	08 94       	sec
     63a:	a1 1c       	adc	r10, r1
     63c:	b1 1c       	adc	r11, r1
     63e:	22 e0       	ldi	r18, 0x02	; 2
     640:	30 e0       	ldi	r19, 0x00	; 0
     642:	c2 0e       	add	r12, r18
     644:	d3 1e       	adc	r13, r19
     646:	21 e0       	ldi	r18, 0x01	; 1
     648:	e2 2e       	mov	r14, r18
     64a:	f1 2c       	mov	r15, r1
     64c:	12 c0       	rjmp	.+36     	; 0x672 <__stack+0x173>
     64e:	f6 01       	movw	r30, r12
     650:	a0 80       	ld	r10, Z
     652:	b1 80       	ldd	r11, Z+1	; 0x01
     654:	16 fd       	sbrc	r17, 6
     656:	03 c0       	rjmp	.+6      	; 0x65e <__stack+0x15f>
     658:	6f ef       	ldi	r22, 0xFF	; 255
     65a:	7f ef       	ldi	r23, 0xFF	; 255
     65c:	02 c0       	rjmp	.+4      	; 0x662 <__stack+0x163>
     65e:	69 2d       	mov	r22, r9
     660:	70 e0       	ldi	r23, 0x00	; 0
     662:	22 e0       	ldi	r18, 0x02	; 2
     664:	30 e0       	ldi	r19, 0x00	; 0
     666:	c2 0e       	add	r12, r18
     668:	d3 1e       	adc	r13, r19
     66a:	c5 01       	movw	r24, r10
     66c:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <strnlen>
     670:	7c 01       	movw	r14, r24
     672:	1f 77       	andi	r17, 0x7F	; 127
     674:	13 c0       	rjmp	.+38     	; 0x69c <__stack+0x19d>
     676:	f6 01       	movw	r30, r12
     678:	a0 80       	ld	r10, Z
     67a:	b1 80       	ldd	r11, Z+1	; 0x01
     67c:	16 fd       	sbrc	r17, 6
     67e:	03 c0       	rjmp	.+6      	; 0x686 <__stack+0x187>
     680:	6f ef       	ldi	r22, 0xFF	; 255
     682:	7f ef       	ldi	r23, 0xFF	; 255
     684:	02 c0       	rjmp	.+4      	; 0x68a <__stack+0x18b>
     686:	69 2d       	mov	r22, r9
     688:	70 e0       	ldi	r23, 0x00	; 0
     68a:	22 e0       	ldi	r18, 0x02	; 2
     68c:	30 e0       	ldi	r19, 0x00	; 0
     68e:	c2 0e       	add	r12, r18
     690:	d3 1e       	adc	r13, r19
     692:	c5 01       	movw	r24, r10
     694:	0e 94 d1 06 	call	0xda2	; 0xda2 <strnlen_P>
     698:	7c 01       	movw	r14, r24
     69a:	10 68       	ori	r17, 0x80	; 128
     69c:	13 ff       	sbrs	r17, 3
     69e:	07 c0       	rjmp	.+14     	; 0x6ae <__stack+0x1af>
     6a0:	1b c0       	rjmp	.+54     	; 0x6d8 <__stack+0x1d9>
     6a2:	80 e2       	ldi	r24, 0x20	; 32
     6a4:	90 e0       	ldi	r25, 0x00	; 0
     6a6:	b3 01       	movw	r22, r6
     6a8:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     6ac:	8a 94       	dec	r8
     6ae:	88 2d       	mov	r24, r8
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	e8 16       	cp	r14, r24
     6b4:	f9 06       	cpc	r15, r25
     6b6:	a8 f3       	brcs	.-22     	; 0x6a2 <__stack+0x1a3>
     6b8:	0f c0       	rjmp	.+30     	; 0x6d8 <__stack+0x1d9>
     6ba:	f5 01       	movw	r30, r10
     6bc:	17 fd       	sbrc	r17, 7
     6be:	85 91       	lpm	r24, Z+
     6c0:	17 ff       	sbrs	r17, 7
     6c2:	81 91       	ld	r24, Z+
     6c4:	5f 01       	movw	r10, r30
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	b3 01       	movw	r22, r6
     6ca:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     6ce:	81 10       	cpse	r8, r1
     6d0:	8a 94       	dec	r8
     6d2:	08 94       	sec
     6d4:	e1 08       	sbc	r14, r1
     6d6:	f1 08       	sbc	r15, r1
     6d8:	e1 14       	cp	r14, r1
     6da:	f1 04       	cpc	r15, r1
     6dc:	71 f7       	brne	.-36     	; 0x6ba <__stack+0x1bb>
     6de:	f2 c0       	rjmp	.+484    	; 0x8c4 <__stack+0x3c5>
     6e0:	94 36       	cpi	r25, 0x64	; 100
     6e2:	11 f0       	breq	.+4      	; 0x6e8 <__stack+0x1e9>
     6e4:	99 36       	cpi	r25, 0x69	; 105
     6e6:	89 f5       	brne	.+98     	; 0x74a <__stack+0x24b>
     6e8:	17 ff       	sbrs	r17, 7
     6ea:	08 c0       	rjmp	.+16     	; 0x6fc <__stack+0x1fd>
     6ec:	f6 01       	movw	r30, r12
     6ee:	20 81       	ld	r18, Z
     6f0:	31 81       	ldd	r19, Z+1	; 0x01
     6f2:	42 81       	ldd	r20, Z+2	; 0x02
     6f4:	53 81       	ldd	r21, Z+3	; 0x03
     6f6:	84 e0       	ldi	r24, 0x04	; 4
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	0a c0       	rjmp	.+20     	; 0x710 <__stack+0x211>
     6fc:	f6 01       	movw	r30, r12
     6fe:	80 81       	ld	r24, Z
     700:	91 81       	ldd	r25, Z+1	; 0x01
     702:	9c 01       	movw	r18, r24
     704:	44 27       	eor	r20, r20
     706:	37 fd       	sbrc	r19, 7
     708:	40 95       	com	r20
     70a:	54 2f       	mov	r21, r20
     70c:	82 e0       	ldi	r24, 0x02	; 2
     70e:	90 e0       	ldi	r25, 0x00	; 0
     710:	c8 0e       	add	r12, r24
     712:	d9 1e       	adc	r13, r25
     714:	9f e6       	ldi	r25, 0x6F	; 111
     716:	f9 2e       	mov	r15, r25
     718:	f1 22       	and	r15, r17
     71a:	57 ff       	sbrs	r21, 7
     71c:	09 c0       	rjmp	.+18     	; 0x730 <__stack+0x231>
     71e:	50 95       	com	r21
     720:	40 95       	com	r20
     722:	30 95       	com	r19
     724:	21 95       	neg	r18
     726:	3f 4f       	sbci	r19, 0xFF	; 255
     728:	4f 4f       	sbci	r20, 0xFF	; 255
     72a:	5f 4f       	sbci	r21, 0xFF	; 255
     72c:	90 e8       	ldi	r25, 0x80	; 128
     72e:	f9 2a       	or	r15, r25
     730:	ca 01       	movw	r24, r20
     732:	b9 01       	movw	r22, r18
     734:	ae 01       	movw	r20, r28
     736:	4f 5f       	subi	r20, 0xFF	; 255
     738:	5f 4f       	sbci	r21, 0xFF	; 255
     73a:	2a e0       	ldi	r18, 0x0A	; 10
     73c:	30 e0       	ldi	r19, 0x00	; 0
     73e:	0e 94 39 07 	call	0xe72	; 0xe72 <__ultoa_invert>
     742:	e8 2e       	mov	r14, r24
     744:	e8 89       	ldd	r30, Y+16	; 0x10
     746:	ee 1a       	sub	r14, r30
     748:	41 c0       	rjmp	.+130    	; 0x7cc <__stack+0x2cd>
     74a:	95 37       	cpi	r25, 0x75	; 117
     74c:	21 f4       	brne	.+8      	; 0x756 <__stack+0x257>
     74e:	1f 7e       	andi	r17, 0xEF	; 239
     750:	2a e0       	ldi	r18, 0x0A	; 10
     752:	30 e0       	ldi	r19, 0x00	; 0
     754:	1c c0       	rjmp	.+56     	; 0x78e <__stack+0x28f>
     756:	19 7f       	andi	r17, 0xF9	; 249
     758:	9f 36       	cpi	r25, 0x6F	; 111
     75a:	61 f0       	breq	.+24     	; 0x774 <__stack+0x275>
     75c:	90 37       	cpi	r25, 0x70	; 112
     75e:	20 f4       	brcc	.+8      	; 0x768 <__stack+0x269>
     760:	98 35       	cpi	r25, 0x58	; 88
     762:	09 f0       	breq	.+2      	; 0x766 <__stack+0x267>
     764:	b2 c0       	rjmp	.+356    	; 0x8ca <__stack+0x3cb>
     766:	0f c0       	rjmp	.+30     	; 0x786 <__stack+0x287>
     768:	90 37       	cpi	r25, 0x70	; 112
     76a:	39 f0       	breq	.+14     	; 0x77a <__stack+0x27b>
     76c:	98 37       	cpi	r25, 0x78	; 120
     76e:	09 f0       	breq	.+2      	; 0x772 <__stack+0x273>
     770:	ac c0       	rjmp	.+344    	; 0x8ca <__stack+0x3cb>
     772:	04 c0       	rjmp	.+8      	; 0x77c <__stack+0x27d>
     774:	28 e0       	ldi	r18, 0x08	; 8
     776:	30 e0       	ldi	r19, 0x00	; 0
     778:	0a c0       	rjmp	.+20     	; 0x78e <__stack+0x28f>
     77a:	10 61       	ori	r17, 0x10	; 16
     77c:	14 fd       	sbrc	r17, 4
     77e:	14 60       	ori	r17, 0x04	; 4
     780:	20 e1       	ldi	r18, 0x10	; 16
     782:	30 e0       	ldi	r19, 0x00	; 0
     784:	04 c0       	rjmp	.+8      	; 0x78e <__stack+0x28f>
     786:	14 fd       	sbrc	r17, 4
     788:	16 60       	ori	r17, 0x06	; 6
     78a:	20 e1       	ldi	r18, 0x10	; 16
     78c:	32 e0       	ldi	r19, 0x02	; 2
     78e:	17 ff       	sbrs	r17, 7
     790:	08 c0       	rjmp	.+16     	; 0x7a2 <__stack+0x2a3>
     792:	f6 01       	movw	r30, r12
     794:	60 81       	ld	r22, Z
     796:	71 81       	ldd	r23, Z+1	; 0x01
     798:	82 81       	ldd	r24, Z+2	; 0x02
     79a:	93 81       	ldd	r25, Z+3	; 0x03
     79c:	44 e0       	ldi	r20, 0x04	; 4
     79e:	50 e0       	ldi	r21, 0x00	; 0
     7a0:	08 c0       	rjmp	.+16     	; 0x7b2 <__stack+0x2b3>
     7a2:	f6 01       	movw	r30, r12
     7a4:	80 81       	ld	r24, Z
     7a6:	91 81       	ldd	r25, Z+1	; 0x01
     7a8:	bc 01       	movw	r22, r24
     7aa:	80 e0       	ldi	r24, 0x00	; 0
     7ac:	90 e0       	ldi	r25, 0x00	; 0
     7ae:	42 e0       	ldi	r20, 0x02	; 2
     7b0:	50 e0       	ldi	r21, 0x00	; 0
     7b2:	c4 0e       	add	r12, r20
     7b4:	d5 1e       	adc	r13, r21
     7b6:	ae 01       	movw	r20, r28
     7b8:	4f 5f       	subi	r20, 0xFF	; 255
     7ba:	5f 4f       	sbci	r21, 0xFF	; 255
     7bc:	0e 94 39 07 	call	0xe72	; 0xe72 <__ultoa_invert>
     7c0:	e8 2e       	mov	r14, r24
     7c2:	58 89       	ldd	r21, Y+16	; 0x10
     7c4:	e5 1a       	sub	r14, r21
     7c6:	8f e7       	ldi	r24, 0x7F	; 127
     7c8:	f8 2e       	mov	r15, r24
     7ca:	f1 22       	and	r15, r17
     7cc:	f6 fe       	sbrs	r15, 6
     7ce:	0b c0       	rjmp	.+22     	; 0x7e6 <__stack+0x2e7>
     7d0:	8e ef       	ldi	r24, 0xFE	; 254
     7d2:	f8 22       	and	r15, r24
     7d4:	e9 14       	cp	r14, r9
     7d6:	38 f4       	brcc	.+14     	; 0x7e6 <__stack+0x2e7>
     7d8:	f4 fe       	sbrs	r15, 4
     7da:	07 c0       	rjmp	.+14     	; 0x7ea <__stack+0x2eb>
     7dc:	f2 fc       	sbrc	r15, 2
     7de:	05 c0       	rjmp	.+10     	; 0x7ea <__stack+0x2eb>
     7e0:	9f ee       	ldi	r25, 0xEF	; 239
     7e2:	f9 22       	and	r15, r25
     7e4:	02 c0       	rjmp	.+4      	; 0x7ea <__stack+0x2eb>
     7e6:	1e 2d       	mov	r17, r14
     7e8:	01 c0       	rjmp	.+2      	; 0x7ec <__stack+0x2ed>
     7ea:	19 2d       	mov	r17, r9
     7ec:	f4 fe       	sbrs	r15, 4
     7ee:	0d c0       	rjmp	.+26     	; 0x80a <__stack+0x30b>
     7f0:	fe 01       	movw	r30, r28
     7f2:	ee 0d       	add	r30, r14
     7f4:	f1 1d       	adc	r31, r1
     7f6:	80 81       	ld	r24, Z
     7f8:	80 33       	cpi	r24, 0x30	; 48
     7fa:	19 f4       	brne	.+6      	; 0x802 <__stack+0x303>
     7fc:	e9 ee       	ldi	r30, 0xE9	; 233
     7fe:	fe 22       	and	r15, r30
     800:	08 c0       	rjmp	.+16     	; 0x812 <__stack+0x313>
     802:	1f 5f       	subi	r17, 0xFF	; 255
     804:	f2 fe       	sbrs	r15, 2
     806:	05 c0       	rjmp	.+10     	; 0x812 <__stack+0x313>
     808:	03 c0       	rjmp	.+6      	; 0x810 <__stack+0x311>
     80a:	8f 2d       	mov	r24, r15
     80c:	86 78       	andi	r24, 0x86	; 134
     80e:	09 f0       	breq	.+2      	; 0x812 <__stack+0x313>
     810:	1f 5f       	subi	r17, 0xFF	; 255
     812:	0f 2d       	mov	r16, r15
     814:	f3 fc       	sbrc	r15, 3
     816:	14 c0       	rjmp	.+40     	; 0x840 <__stack+0x341>
     818:	f0 fe       	sbrs	r15, 0
     81a:	0f c0       	rjmp	.+30     	; 0x83a <__stack+0x33b>
     81c:	18 15       	cp	r17, r8
     81e:	10 f0       	brcs	.+4      	; 0x824 <__stack+0x325>
     820:	9e 2c       	mov	r9, r14
     822:	0b c0       	rjmp	.+22     	; 0x83a <__stack+0x33b>
     824:	9e 2c       	mov	r9, r14
     826:	98 0c       	add	r9, r8
     828:	91 1a       	sub	r9, r17
     82a:	18 2d       	mov	r17, r8
     82c:	06 c0       	rjmp	.+12     	; 0x83a <__stack+0x33b>
     82e:	80 e2       	ldi	r24, 0x20	; 32
     830:	90 e0       	ldi	r25, 0x00	; 0
     832:	b3 01       	movw	r22, r6
     834:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     838:	1f 5f       	subi	r17, 0xFF	; 255
     83a:	18 15       	cp	r17, r8
     83c:	c0 f3       	brcs	.-16     	; 0x82e <__stack+0x32f>
     83e:	04 c0       	rjmp	.+8      	; 0x848 <__stack+0x349>
     840:	18 15       	cp	r17, r8
     842:	10 f4       	brcc	.+4      	; 0x848 <__stack+0x349>
     844:	81 1a       	sub	r8, r17
     846:	01 c0       	rjmp	.+2      	; 0x84a <__stack+0x34b>
     848:	88 24       	eor	r8, r8
     84a:	04 ff       	sbrs	r16, 4
     84c:	0f c0       	rjmp	.+30     	; 0x86c <__stack+0x36d>
     84e:	80 e3       	ldi	r24, 0x30	; 48
     850:	90 e0       	ldi	r25, 0x00	; 0
     852:	b3 01       	movw	r22, r6
     854:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     858:	02 ff       	sbrs	r16, 2
     85a:	1d c0       	rjmp	.+58     	; 0x896 <__stack+0x397>
     85c:	01 fd       	sbrc	r16, 1
     85e:	03 c0       	rjmp	.+6      	; 0x866 <__stack+0x367>
     860:	88 e7       	ldi	r24, 0x78	; 120
     862:	90 e0       	ldi	r25, 0x00	; 0
     864:	0e c0       	rjmp	.+28     	; 0x882 <__stack+0x383>
     866:	88 e5       	ldi	r24, 0x58	; 88
     868:	90 e0       	ldi	r25, 0x00	; 0
     86a:	0b c0       	rjmp	.+22     	; 0x882 <__stack+0x383>
     86c:	80 2f       	mov	r24, r16
     86e:	86 78       	andi	r24, 0x86	; 134
     870:	91 f0       	breq	.+36     	; 0x896 <__stack+0x397>
     872:	01 ff       	sbrs	r16, 1
     874:	02 c0       	rjmp	.+4      	; 0x87a <__stack+0x37b>
     876:	8b e2       	ldi	r24, 0x2B	; 43
     878:	01 c0       	rjmp	.+2      	; 0x87c <__stack+0x37d>
     87a:	80 e2       	ldi	r24, 0x20	; 32
     87c:	f7 fc       	sbrc	r15, 7
     87e:	8d e2       	ldi	r24, 0x2D	; 45
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	b3 01       	movw	r22, r6
     884:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     888:	06 c0       	rjmp	.+12     	; 0x896 <__stack+0x397>
     88a:	80 e3       	ldi	r24, 0x30	; 48
     88c:	90 e0       	ldi	r25, 0x00	; 0
     88e:	b3 01       	movw	r22, r6
     890:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     894:	9a 94       	dec	r9
     896:	e9 14       	cp	r14, r9
     898:	c0 f3       	brcs	.-16     	; 0x88a <__stack+0x38b>
     89a:	ea 94       	dec	r14
     89c:	e1 e0       	ldi	r30, 0x01	; 1
     89e:	f0 e0       	ldi	r31, 0x00	; 0
     8a0:	ec 0f       	add	r30, r28
     8a2:	fd 1f       	adc	r31, r29
     8a4:	ee 0d       	add	r30, r14
     8a6:	f1 1d       	adc	r31, r1
     8a8:	80 81       	ld	r24, Z
     8aa:	90 e0       	ldi	r25, 0x00	; 0
     8ac:	b3 01       	movw	r22, r6
     8ae:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     8b2:	ee 20       	and	r14, r14
     8b4:	91 f7       	brne	.-28     	; 0x89a <__stack+0x39b>
     8b6:	06 c0       	rjmp	.+12     	; 0x8c4 <__stack+0x3c5>
     8b8:	80 e2       	ldi	r24, 0x20	; 32
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	b3 01       	movw	r22, r6
     8be:	0e 94 e7 06 	call	0xdce	; 0xdce <fputc>
     8c2:	8a 94       	dec	r8
     8c4:	88 20       	and	r8, r8
     8c6:	c1 f7       	brne	.-16     	; 0x8b8 <__stack+0x3b9>
     8c8:	97 cc       	rjmp	.-1746   	; 0x1f8 <vfprintf+0x30>
     8ca:	f3 01       	movw	r30, r6
     8cc:	66 81       	ldd	r22, Z+6	; 0x06
     8ce:	77 81       	ldd	r23, Z+7	; 0x07
     8d0:	cb 01       	movw	r24, r22
     8d2:	61 96       	adiw	r28, 0x11	; 17
     8d4:	e2 e1       	ldi	r30, 0x12	; 18
     8d6:	0c 94 e9 07 	jmp	0xfd2	; 0xfd2 <__epilogue_restores__>

000008da <main>:
#endif


int main(void)
{
	serial_begin(19200);
     8da:	60 e0       	ldi	r22, 0x00	; 0
     8dc:	7b e4       	ldi	r23, 0x4B	; 75
     8de:	80 e0       	ldi	r24, 0x00	; 0
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	0e 94 90 04 	call	0x920	; 0x920 <serial_begin>

	// Who are you?
	serial_printf("serial_test 1.18\r",0);
     8e6:	00 d0       	rcall	.+0      	; 0x8e8 <main+0xe>
     8e8:	00 d0       	rcall	.+0      	; 0x8ea <main+0x10>
     8ea:	84 e6       	ldi	r24, 0x64	; 100
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	ed b7       	in	r30, 0x3d	; 61
     8f0:	fe b7       	in	r31, 0x3e	; 62
     8f2:	92 83       	std	Z+2, r25	; 0x02
     8f4:	81 83       	std	Z+1, r24	; 0x01
     8f6:	14 82       	std	Z+4, r1	; 0x04
     8f8:	13 82       	std	Z+3, r1	; 0x03
     8fa:	0e 94 13 07 	call	0xe26	; 0xe26 <printf_P>
     8fe:	28 e8       	ldi	r18, 0x88	; 136
     900:	33 e1       	ldi	r19, 0x13	; 19
     902:	0f 90       	pop	r0
     904:	0f 90       	pop	r0
     906:	0f 90       	pop	r0
     908:	0f 90       	pop	r0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     90a:	49 e1       	ldi	r20, 0x19	; 25
     90c:	50 e0       	ldi	r21, 0x00	; 0
     90e:	ca 01       	movw	r24, r20
     910:	01 97       	sbiw	r24, 0x01	; 1
     912:	f1 f7       	brne	.-4      	; 0x910 <main+0x36>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     914:	21 50       	subi	r18, 0x01	; 1
     916:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     918:	d1 f7       	brne	.-12     	; 0x90e <main+0x34>
     91a:	28 e8       	ldi	r18, 0x88	; 136
     91c:	33 e1       	ldi	r19, 0x13	; 19
     91e:	f7 cf       	rjmp	.-18     	; 0x90e <main+0x34>

00000920 <serial_begin>:
 */

#include "serial.h"

void serial_begin(uint32_t baudrate)
{
     920:	0f 93       	push	r16
     922:	1f 93       	push	r17
	usart_init(baudrate);
     924:	0e 94 de 04 	call	0x9bc	; 0x9bc <usart_init>

	#if defined(Butterfly) 
		butterfly_init();
     928:	0e 94 d4 05 	call	0xba8	; 0xba8 <butterfly_init>
	#endif

	// Initialize the fifo buffer
	fifo_init(&buffer, usart_buffer, SIZE);
     92c:	8e e1       	ldi	r24, 0x1E	; 30
     92e:	91 e0       	ldi	r25, 0x01	; 1
     930:	6e e0       	ldi	r22, 0x0E	; 14
     932:	71 e0       	ldi	r23, 0x01	; 1
     934:	40 e1       	ldi	r20, 0x10	; 16
     936:	0e 94 4f 05 	call	0xa9e	; 0xa9e <fifo_init>

	// Send buffer to the uart library
	usart_set_buffer(buffer);
     93a:	00 91 1e 01 	lds	r16, 0x011E
     93e:	10 91 1f 01 	lds	r17, 0x011F
     942:	20 91 20 01 	lds	r18, 0x0120
     946:	30 91 21 01 	lds	r19, 0x0121
     94a:	40 91 22 01 	lds	r20, 0x0122
     94e:	50 91 23 01 	lds	r21, 0x0123
     952:	60 91 24 01 	lds	r22, 0x0124
     956:	70 91 25 01 	lds	r23, 0x0125
     95a:	80 91 26 01 	lds	r24, 0x0126
     95e:	0e 94 b4 04 	call	0x968	; 0x968 <usart_set_buffer>

}
     962:	1f 91       	pop	r17
     964:	0f 91       	pop	r16
     966:	08 95       	ret

00000968 <usart_set_buffer>:
	// Put char in buffer
	if (!fifo_put_byte(&buffer, b) )printf_P(PSTR("ISR fifo_put_byte Error\r")) ;	
}

uint8_t usart_set_buffer(struct fifo_struct fifo)
{
     968:	0f 93       	push	r16
     96a:	1f 93       	push	r17
     96c:	df 93       	push	r29
     96e:	cf 93       	push	r28
     970:	cd b7       	in	r28, 0x3d	; 61
     972:	de b7       	in	r29, 0x3e	; 62
     974:	29 97       	sbiw	r28, 0x09	; 9
     976:	0f b6       	in	r0, 0x3f	; 63
     978:	f8 94       	cli
     97a:	de bf       	out	0x3e, r29	; 62
     97c:	0f be       	out	0x3f, r0	; 63
     97e:	cd bf       	out	0x3d, r28	; 61
     980:	09 83       	std	Y+1, r16	; 0x01
     982:	1a 83       	std	Y+2, r17	; 0x02
     984:	2b 83       	std	Y+3, r18	; 0x03
     986:	3c 83       	std	Y+4, r19	; 0x04
     988:	4d 83       	std	Y+5, r20	; 0x05
     98a:	5e 83       	std	Y+6, r21	; 0x06
     98c:	6f 83       	std	Y+7, r22	; 0x07
     98e:	78 87       	std	Y+8, r23	; 0x08
     990:	89 87       	std	Y+9, r24	; 0x09

	buffer = fifo;
     992:	ae e1       	ldi	r26, 0x1E	; 30
     994:	b1 e0       	ldi	r27, 0x01	; 1
     996:	fe 01       	movw	r30, r28
     998:	31 96       	adiw	r30, 0x01	; 1
     99a:	89 e0       	ldi	r24, 0x09	; 9
     99c:	01 90       	ld	r0, Z+
     99e:	0d 92       	st	X+, r0
     9a0:	81 50       	subi	r24, 0x01	; 1
     9a2:	e1 f7       	brne	.-8      	; 0x99c <usart_set_buffer+0x34>
		usart_error(BUFFER_SIZE);
		return (0);
	}*/

	return(1);
}
     9a4:	81 e0       	ldi	r24, 0x01	; 1
     9a6:	29 96       	adiw	r28, 0x09	; 9
     9a8:	0f b6       	in	r0, 0x3f	; 63
     9aa:	f8 94       	cli
     9ac:	de bf       	out	0x3e, r29	; 62
     9ae:	0f be       	out	0x3f, r0	; 63
     9b0:	cd bf       	out	0x3d, r28	; 61
     9b2:	cf 91       	pop	r28
     9b4:	df 91       	pop	r29
     9b6:	1f 91       	pop	r17
     9b8:	0f 91       	pop	r16
     9ba:	08 95       	ret

000009bc <usart_init>:

// Keep this in the same file as the usart_put_char function
FILE mystdout = FDEV_SETUP_STREAM(usart_put_char, NULL, _FDEV_SETUP_WRITE);

void usart_init(uint32_t baudrate)
{
     9bc:	9b 01       	movw	r18, r22
     9be:	ac 01       	movw	r20, r24
   	stdout = &mystdout;    //set the output stream 
     9c0:	80 e0       	ldi	r24, 0x00	; 0
     9c2:	91 e0       	ldi	r25, 0x01	; 1
     9c4:	90 93 2a 01 	sts	0x012A, r25
     9c8:	80 93 29 01 	sts	0x0129, r24
		
	//#if defined(Butterfly) 
	//butterfly_init();
	//#endif

	sei(); // Set the Global Interrupt Enable flag
     9cc:	78 94       	sei

	// Set Baud registers with values from <util\setbaud.h> in SmileyUSART.h
	USART_BAUD_RATE_HIGH = (F_CPU/(baudrate*16L)-1) >> 8;
     9ce:	64 e0       	ldi	r22, 0x04	; 4
     9d0:	22 0f       	add	r18, r18
     9d2:	33 1f       	adc	r19, r19
     9d4:	44 1f       	adc	r20, r20
     9d6:	55 1f       	adc	r21, r21
     9d8:	6a 95       	dec	r22
     9da:	d1 f7       	brne	.-12     	; 0x9d0 <usart_init+0x14>
     9dc:	60 e4       	ldi	r22, 0x40	; 64
     9de:	72 e4       	ldi	r23, 0x42	; 66
     9e0:	8f e0       	ldi	r24, 0x0F	; 15
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	0e 94 ab 07 	call	0xf56	; 0xf56 <__udivmodsi4>
     9e8:	c9 01       	movw	r24, r18
     9ea:	da 01       	movw	r26, r20
     9ec:	01 97       	sbiw	r24, 0x01	; 1
     9ee:	a1 09       	sbc	r26, r1
     9f0:	b1 09       	sbc	r27, r1
     9f2:	29 2f       	mov	r18, r25
     9f4:	3a 2f       	mov	r19, r26
     9f6:	4b 2f       	mov	r20, r27
     9f8:	55 27       	eor	r21, r21
     9fa:	01 96       	adiw	r24, 0x01	; 1
     9fc:	a1 1d       	adc	r26, r1
     9fe:	b1 1d       	adc	r27, r1
     a00:	20 93 c5 00 	sts	0x00C5, r18
	USART_BAUD_RATE_LOW = (uint8_t)(F_CPU/(baudrate*16L)-1);
     a04:	81 50       	subi	r24, 0x01	; 1
     a06:	80 93 c4 00 	sts	0x00C4, r24

	// Enable receiver and transmitter
	USART_CONTROL_STATUS_REG_B = (1 << RXCIE) | (1 << USART_ENABLE_RECEIVER) | (1 << USART_ENABLE_TRANSMITTER);
     a0a:	88 e9       	ldi	r24, 0x98	; 152
     a0c:	80 93 c1 00 	sts	0x00C1, r24
	// for the Butterfly reuse the Atmel code for the USART in the intialization process
#else
   #error "No USART definition for MCU in USARTInit"
#endif 

}
     a10:	08 95       	ret

00000a12 <__vector_13>:
#include "usart.h"

// Used for intial testing if ISR
//extern volatile uint8_t usart_flag;
ISR(USART0_RX_vect)
{
     a12:	1f 92       	push	r1
     a14:	0f 92       	push	r0
     a16:	0f b6       	in	r0, 0x3f	; 63
     a18:	0f 92       	push	r0
     a1a:	11 24       	eor	r1, r1
     a1c:	2f 93       	push	r18
     a1e:	3f 93       	push	r19
     a20:	4f 93       	push	r20
     a22:	5f 93       	push	r21
     a24:	6f 93       	push	r22
     a26:	7f 93       	push	r23
     a28:	8f 93       	push	r24
     a2a:	9f 93       	push	r25
     a2c:	af 93       	push	r26
     a2e:	bf 93       	push	r27
     a30:	ef 93       	push	r30
     a32:	ff 93       	push	r31
	uint8_t b = UDR;
     a34:	60 91 c6 00 	lds	r22, 0x00C6
	// Used in testing
	// First test ping back received byte.
	//usart_send_byte(b);

	// Put char in buffer
	if (!fifo_put_byte(&buffer, b) )printf_P(PSTR("ISR fifo_put_byte Error\r")) ;	
     a38:	8e e1       	ldi	r24, 0x1E	; 30
     a3a:	91 e0       	ldi	r25, 0x01	; 1
     a3c:	0e 94 5a 05 	call	0xab4	; 0xab4 <fifo_put_byte>
     a40:	88 23       	and	r24, r24
     a42:	59 f4       	brne	.+22     	; 0xa5a <__vector_13+0x48>
     a44:	00 d0       	rcall	.+0      	; 0xa46 <__vector_13+0x34>
     a46:	86 e7       	ldi	r24, 0x76	; 118
     a48:	90 e0       	ldi	r25, 0x00	; 0
     a4a:	ed b7       	in	r30, 0x3d	; 61
     a4c:	fe b7       	in	r31, 0x3e	; 62
     a4e:	92 83       	std	Z+2, r25	; 0x02
     a50:	81 83       	std	Z+1, r24	; 0x01
     a52:	0e 94 13 07 	call	0xe26	; 0xe26 <printf_P>
     a56:	0f 90       	pop	r0
     a58:	0f 90       	pop	r0
}
     a5a:	ff 91       	pop	r31
     a5c:	ef 91       	pop	r30
     a5e:	bf 91       	pop	r27
     a60:	af 91       	pop	r26
     a62:	9f 91       	pop	r25
     a64:	8f 91       	pop	r24
     a66:	7f 91       	pop	r23
     a68:	6f 91       	pop	r22
     a6a:	5f 91       	pop	r21
     a6c:	4f 91       	pop	r20
     a6e:	3f 91       	pop	r19
     a70:	2f 91       	pop	r18
     a72:	0f 90       	pop	r0
     a74:	0f be       	out	0x3f, r0	; 63
     a76:	0f 90       	pop	r0
     a78:	1f 90       	pop	r1
     a7a:	18 95       	reti

00000a7c <usart_put_char>:

#include "usart.h"

 
int usart_put_char(char c, FILE *stream) 
{ 
     a7c:	1f 93       	push	r17
     a7e:	18 2f       	mov	r17, r24
	if (c == '\n') usart_put_char('\r', stream);
     a80:	8a 30       	cpi	r24, 0x0A	; 10
     a82:	19 f4       	brne	.+6      	; 0xa8a <usart_put_char+0xe>
     a84:	8d e0       	ldi	r24, 0x0D	; 13
     a86:	0e 94 3e 05 	call	0xa7c	; 0xa7c <usart_put_char>
   	loop_until_bit_is_set(UCSRA, UDRE); // wait for UDR to be clear 
     a8a:	80 91 c0 00 	lds	r24, 0x00C0
     a8e:	85 ff       	sbrs	r24, 5
     a90:	fc cf       	rjmp	.-8      	; 0xa8a <usart_put_char+0xe>
   	UDR = c;    //send the character 
     a92:	10 93 c6 00 	sts	0x00C6, r17
   	return 0; 
} 
     a96:	80 e0       	ldi	r24, 0x00	; 0
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	1f 91       	pop	r17
     a9c:	08 95       	ret

00000a9e <fifo_init>:
	\date 10/22/10
	\version 1.01
*/
/* ********************************************************** */
void fifo_init(struct fifo_struct *fifo, uint8_t *start, uint8_t size)
{	
     a9e:	fc 01       	movw	r30, r24
	// set start pointer and size of the buffer
	fifo->ptr = start;
     aa0:	71 83       	std	Z+1, r23	; 0x01
     aa2:	60 83       	st	Z, r22
	fifo->size = size;
     aa4:	42 83       	std	Z+2, r20	; 0x02
     aa6:	13 82       	std	Z+3, r1	; 0x03
	// initialize index and length
	fifo->index = 0;
     aa8:	15 82       	std	Z+5, r1	; 0x05
     aaa:	14 82       	std	Z+4, r1	; 0x04
	fifo->length = 0;
     aac:	17 82       	std	Z+7, r1	; 0x07
     aae:	16 82       	std	Z+6, r1	; 0x06
	fifo->error = FIFO_NO_ERROR;
     ab0:	10 86       	std	Z+8, r1	; 0x08
}
     ab2:	08 95       	ret

00000ab4 <fifo_put_byte>:
	\date 10/22/10
	\version 1.01
*/
/************************************************************/
uint8_t fifo_put_byte(struct fifo_struct *fifo, uint8_t b)
{
     ab4:	cf 93       	push	r28
     ab6:	df 93       	push	r29
     ab8:	ec 01       	movw	r28, r24
     aba:	46 2f       	mov	r20, r22
	//printf("fifo->length: %d fifo->size: %d\r",fifo->length,fifo->size);

	// Does the fifo have available space?
	if(fifo->length < fifo->size)
     abc:	2e 81       	ldd	r18, Y+6	; 0x06
     abe:	3f 81       	ldd	r19, Y+7	; 0x07
     ac0:	6a 81       	ldd	r22, Y+2	; 0x02
     ac2:	7b 81       	ldd	r23, Y+3	; 0x03
     ac4:	26 17       	cp	r18, r22
     ac6:	37 07       	cpc	r19, r23
     ac8:	90 f4       	brcc	.+36     	; 0xaee <fifo_put_byte+0x3a>
	{
		// Put the byte at the index of the fifo
		fifo->ptr[(fifo->index + fifo->length) % fifo->size] = b;
     aca:	8c 81       	ldd	r24, Y+4	; 0x04
     acc:	9d 81       	ldd	r25, Y+5	; 0x05
     ace:	82 0f       	add	r24, r18
     ad0:	93 1f       	adc	r25, r19
     ad2:	0e 94 97 07 	call	0xf2e	; 0xf2e <__udivmodhi4>
     ad6:	e8 81       	ld	r30, Y
     ad8:	f9 81       	ldd	r31, Y+1	; 0x01
     ada:	e8 0f       	add	r30, r24
     adc:	f9 1f       	adc	r31, r25
     ade:	40 83       	st	Z, r20
		// Increment the length
		fifo->length++;
     ae0:	8e 81       	ldd	r24, Y+6	; 0x06
     ae2:	9f 81       	ldd	r25, Y+7	; 0x07
     ae4:	01 96       	adiw	r24, 0x01	; 1
     ae6:	9f 83       	std	Y+7, r25	; 0x07
     ae8:	8e 83       	std	Y+6, r24	; 0x06
     aea:	81 e0       	ldi	r24, 0x01	; 1
     aec:	03 c0       	rjmp	.+6      	; 0xaf4 <fifo_put_byte+0x40>
		
		return 1; // return success
	}
	else
	{
		fifo->error = FIFO_ATTEMPT_PUT_WHEN_FULL;
     aee:	81 e0       	ldi	r24, 0x01	; 1
     af0:	88 87       	std	Y+8, r24	; 0x08
     af2:	80 e0       	ldi	r24, 0x00	; 0
 		return 0; // return failure
	}

}
     af4:	df 91       	pop	r29
     af6:	cf 91       	pop	r28
     af8:	08 95       	ret

00000afa <OSCCAL_calibration>:
{
    unsigned char calibrate = 0;//FALSE;
    int temp;
    unsigned char tempL;

    CLKPR = (1<<CLKPCE);        /// set Clock Prescaler Change Enable
     afa:	80 e8       	ldi	r24, 0x80	; 128
     afc:	80 93 61 00 	sts	0x0061, r24
    /// set prescaler = 8, Inter RC 8Mhz / 8 = 1Mhz
    CLKPR = (1<<CLKPS1) | (1<<CLKPS0);
     b00:	83 e0       	ldi	r24, 0x03	; 3
     b02:	80 93 61 00 	sts	0x0061, r24
    
    TIMSK2 = 0;             ///disable OCIE2A and TOIE2
     b06:	10 92 70 00 	sts	0x0070, r1

    ASSR = (1<<AS2);        ///select asynchronous operation of timer2 (32,768kHz)
     b0a:	88 e0       	ldi	r24, 0x08	; 8
     b0c:	80 93 b6 00 	sts	0x00B6, r24
    
    OCR2A = 200;            /// set timer2 compare value 
     b10:	88 ec       	ldi	r24, 0xC8	; 200
     b12:	80 93 b3 00 	sts	0x00B3, r24

    TIMSK0 = 0;             /// delete any interrupt sources
     b16:	10 92 6e 00 	sts	0x006E, r1
        
    TCCR1B = (1<<CS10);     /// start timer1 with no prescaling
     b1a:	81 e0       	ldi	r24, 0x01	; 1
     b1c:	80 93 81 00 	sts	0x0081, r24
    TCCR2A = (1<<CS20);     /// start timer2 with no prescaling
     b20:	80 93 b0 00 	sts	0x00B0, r24

    while((ASSR & 0x01) | (ASSR & 0x04));       ///wait for TCN2UB and TCR2UB to be cleared
     b24:	20 91 b6 00 	lds	r18, 0x00B6
     b28:	80 91 b6 00 	lds	r24, 0x00B6
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	84 70       	andi	r24, 0x04	; 4
     b30:	90 70       	andi	r25, 0x00	; 0
     b32:	30 e0       	ldi	r19, 0x00	; 0
     b34:	21 70       	andi	r18, 0x01	; 1
     b36:	30 70       	andi	r19, 0x00	; 0
     b38:	82 2b       	or	r24, r18
     b3a:	93 2b       	or	r25, r19
     b3c:	89 2b       	or	r24, r25
     b3e:	91 f7       	brne	.-28     	; 0xb24 <OSCCAL_calibration+0x2a>
    
    while(!calibrate)
    {
        cli(); /// mt __disable_interrupt();  // disable global interrupt
        
        TIFR1 = 0xFF;   /// delete TIFR1 flags
     b40:	4f ef       	ldi	r20, 0xFF	; 255
    
        if (temp > 6250)
        {
            OSCCAL--;   /// the internRC oscillator runs to fast, decrease the OSCCAL
        }
        else if (temp < 6120)
     b42:	51 e0       	ldi	r21, 0x01	; 1

    Delay(1000);    /// wait for external crystal to stabilise
    
    while(!calibrate)
    {
        cli(); /// mt __disable_interrupt();  // disable global interrupt
     b44:	f8 94       	cli
        
        TIFR1 = 0xFF;   /// delete TIFR1 flags
     b46:	46 bb       	out	0x16, r20	; 22
        TIFR2 = 0xFF;   /// delete TIFR2 flags
     b48:	47 bb       	out	0x17, r20	; 23
        
        TCNT1H = 0;     /// clear timer1 counter
     b4a:	10 92 85 00 	sts	0x0085, r1
        TCNT1L = 0;
     b4e:	10 92 84 00 	sts	0x0084, r1
        TCNT2 = 0;      /// clear timer2 counter
     b52:	10 92 b2 00 	sts	0x00B2, r1
           
	while ( !(TIFR2 & (1<<OCF2A)) ); // while ( !(TIFR2 && (1<<OCF2A)) );   // wait for timer2 compareflag
     b56:	b9 9b       	sbis	0x17, 1	; 23
     b58:	fe cf       	rjmp	.-4      	; 0xb56 <OSCCAL_calibration+0x5c>
    
        TCCR1B = 0; /// stop timer1
     b5a:	10 92 81 00 	sts	0x0081, r1

        sei(); /// __enable_interrupt();  // enable global interrupt
     b5e:	78 94       	sei
    
        if ( (TIFR1 & (1<<TOV1)) ) // if ( (TIFR1 && (1<<TOV1)) )
     b60:	b0 99       	sbic	0x16, 0	; 22
     b62:	17 c0       	rjmp	.+46     	; 0xb92 <OSCCAL_calibration+0x98>
        {
            temp = 0xFFFF;      /// if timer1 overflows, set the temp to 0xFFFF
        }
        else
        {   /// read out the timer1 counter value
            tempL = TCNT1L;
     b64:	90 91 84 00 	lds	r25, 0x0084
            temp = TCNT1H;
     b68:	80 91 85 00 	lds	r24, 0x0085
            temp = (temp << 8);
     b6c:	38 2f       	mov	r19, r24
     b6e:	20 e0       	ldi	r18, 0x00	; 0
            temp += tempL;
     b70:	b9 01       	movw	r22, r18
     b72:	69 0f       	add	r22, r25
     b74:	71 1d       	adc	r23, r1
     b76:	cb 01       	movw	r24, r22
        }
    
        if (temp > 6250)
     b78:	78 e1       	ldi	r23, 0x18	; 24
     b7a:	8b 36       	cpi	r24, 0x6B	; 107
     b7c:	97 07       	cpc	r25, r23
     b7e:	24 f0       	brlt	.+8      	; 0xb88 <OSCCAL_calibration+0x8e>
        {
            OSCCAL--;   /// the internRC oscillator runs to fast, decrease the OSCCAL
     b80:	80 91 66 00 	lds	r24, 0x0066
     b84:	81 50       	subi	r24, 0x01	; 1
     b86:	08 c0       	rjmp	.+16     	; 0xb98 <OSCCAL_calibration+0x9e>
        }
        else if (temp < 6120)
     b88:	88 5e       	subi	r24, 0xE8	; 232
     b8a:	97 41       	sbci	r25, 0x17	; 23
     b8c:	14 f0       	brlt	.+4      	; 0xb92 <OSCCAL_calibration+0x98>
     b8e:	81 e0       	ldi	r24, 0x01	; 1
     b90:	06 c0       	rjmp	.+12     	; 0xb9e <OSCCAL_calibration+0xa4>
        {
            OSCCAL++;   /// the internRC oscillator runs to slow, increase the OSCCAL
     b92:	80 91 66 00 	lds	r24, 0x0066
     b96:	8f 5f       	subi	r24, 0xFF	; 255
     b98:	80 93 66 00 	sts	0x0066, r24
     b9c:	80 e0       	ldi	r24, 0x00	; 0
        }
        else
            calibrate = 1;///TRUE;   // the interRC is correct
    
        TCCR1B = (1<<CS10); /// start timer1
     b9e:	50 93 81 00 	sts	0x0081, r21

    while((ASSR & 0x01) | (ASSR & 0x04));       ///wait for TCN2UB and TCR2UB to be cleared

    Delay(1000);    /// wait for external crystal to stabilise
    
    while(!calibrate)
     ba2:	88 23       	and	r24, r24
     ba4:	79 f2       	breq	.-98     	; 0xb44 <OSCCAL_calibration+0x4a>
        else
            calibrate = 1;///TRUE;   // the interRC is correct
    
        TCCR1B = (1<<CS10); /// start timer1
    }
}
     ba6:	08 95       	ret

00000ba8 <butterfly_init>:
*/
/************************************************************/
void butterfly_init(void)
{

    OSCCAL_calibration();   /// Calibrate the OSCCAL byte
     ba8:	0e 94 7d 05 	call	0xafa	; 0xafa <OSCCAL_calibration>

    ACSR = (1<<ACD);
     bac:	20 e8       	ldi	r18, 0x80	; 128
     bae:	20 bf       	out	0x30, r18	; 48

    /// Disable Digital input on PF0-2 (power save)
    DIDR1 = (7<<ADC0D);
     bb0:	87 e0       	ldi	r24, 0x07	; 7
     bb2:	80 93 7f 00 	sts	0x007F, r24

    PORTB = 0xFF;       /// Enable pullups on Ports B and E
     bb6:	8f ef       	ldi	r24, 0xFF	; 255
     bb8:	85 b9       	out	0x05, r24	; 5
    PORTE = 0xFF;
     bba:	8e b9       	out	0x0e, r24	; 14
    
    /// boost IntRC to 2Mhz to achieve 19200 baudrate
    CLKPR = (1<<CLKPCE);        /// set Clock Prescaler Change Enable
     bbc:	e1 e6       	ldi	r30, 0x61	; 97
     bbe:	f0 e0       	ldi	r31, 0x00	; 0
     bc0:	20 83       	st	Z, r18
    /// set prescaler = 4, Inter RC 8Mhz / 4 = 2Mhz
    CLKPR = (1<<CLKPS1);    
     bc2:	92 e0       	ldi	r25, 0x02	; 2
     bc4:	90 83       	st	Z, r25

    UBRRH = 0;
     bc6:	10 92 c5 00 	sts	0x00C5, r1
    UBRRL = 12;
     bca:	8c e0       	ldi	r24, 0x0C	; 12
     bcc:	80 93 c4 00 	sts	0x00C4, r24

    /// Enable 2x speed
    UCSRA = (1<<U2X);
     bd0:	90 93 c0 00 	sts	0x00C0, r25

    /// Enable receiver and transmitter
	// JWP added | 10/22/10
    UCSRB |= (1<<RXEN)|(1<<TXEN)|(0<<RXCIE)|(0<<UDRIE);
     bd4:	e1 ec       	ldi	r30, 0xC1	; 193
     bd6:	f0 e0       	ldi	r31, 0x00	; 0
     bd8:	80 81       	ld	r24, Z
     bda:	88 61       	ori	r24, 0x18	; 24
     bdc:	80 83       	st	Z, r24

    /// Async. mode, 8N1
    UCSRC = (0<<UMSEL)|(0<<UPM0)|(0<<USBS)|(3<<UCSZ0)|(0<<UCPOL);
     bde:	86 e0       	ldi	r24, 0x06	; 6
     be0:	80 93 c2 00 	sts	0x00C2, r24

// TODO 10/23/10
//    sei(); /// mt __enable_interrupt();
    
    /// mt PCMSK1 = (1<<PORTB6) | (1<<PORTB4);
	PCMSK1 = (1<<PINB6) | (1<<PINB4);       // set pin-change interrupt mask
     be4:	80 e5       	ldi	r24, 0x50	; 80
     be6:	80 93 6c 00 	sts	0x006C, r24
  	EIFR   = (1<<PCIF1);                    // clear external intterupt flag 1
     bea:	2c bb       	out	0x1c, r18	; 28
	EIMSK  = (1<<PCIE1);   
     bec:	2d bb       	out	0x1d, r18	; 29

}
     bee:	08 95       	ret

00000bf0 <Delay>:
{
    unsigned char i; // mt int i;
    
    while (millisec--)
        for (i=0; i<125; i++);
}
     bf0:	08 95       	ret

00000bf2 <__ftoa_engine>:
     bf2:	28 30       	cpi	r18, 0x08	; 8
     bf4:	08 f0       	brcs	.+2      	; 0xbf8 <__ftoa_engine+0x6>
     bf6:	27 e0       	ldi	r18, 0x07	; 7
     bf8:	33 27       	eor	r19, r19
     bfa:	da 01       	movw	r26, r20
     bfc:	99 0f       	add	r25, r25
     bfe:	31 1d       	adc	r19, r1
     c00:	87 fd       	sbrc	r24, 7
     c02:	91 60       	ori	r25, 0x01	; 1
     c04:	00 96       	adiw	r24, 0x00	; 0
     c06:	61 05       	cpc	r22, r1
     c08:	71 05       	cpc	r23, r1
     c0a:	39 f4       	brne	.+14     	; 0xc1a <__ftoa_engine+0x28>
     c0c:	32 60       	ori	r19, 0x02	; 2
     c0e:	2e 5f       	subi	r18, 0xFE	; 254
     c10:	3d 93       	st	X+, r19
     c12:	30 e3       	ldi	r19, 0x30	; 48
     c14:	2a 95       	dec	r18
     c16:	e1 f7       	brne	.-8      	; 0xc10 <__ftoa_engine+0x1e>
     c18:	08 95       	ret
     c1a:	9f 3f       	cpi	r25, 0xFF	; 255
     c1c:	30 f0       	brcs	.+12     	; 0xc2a <__ftoa_engine+0x38>
     c1e:	80 38       	cpi	r24, 0x80	; 128
     c20:	71 05       	cpc	r23, r1
     c22:	61 05       	cpc	r22, r1
     c24:	09 f0       	breq	.+2      	; 0xc28 <__ftoa_engine+0x36>
     c26:	3c 5f       	subi	r19, 0xFC	; 252
     c28:	3c 5f       	subi	r19, 0xFC	; 252
     c2a:	3d 93       	st	X+, r19
     c2c:	91 30       	cpi	r25, 0x01	; 1
     c2e:	08 f0       	brcs	.+2      	; 0xc32 <__ftoa_engine+0x40>
     c30:	80 68       	ori	r24, 0x80	; 128
     c32:	91 1d       	adc	r25, r1
     c34:	df 93       	push	r29
     c36:	cf 93       	push	r28
     c38:	1f 93       	push	r17
     c3a:	0f 93       	push	r16
     c3c:	ff 92       	push	r15
     c3e:	ef 92       	push	r14
     c40:	19 2f       	mov	r17, r25
     c42:	98 7f       	andi	r25, 0xF8	; 248
     c44:	96 95       	lsr	r25
     c46:	e9 2f       	mov	r30, r25
     c48:	96 95       	lsr	r25
     c4a:	96 95       	lsr	r25
     c4c:	e9 0f       	add	r30, r25
     c4e:	ff 27       	eor	r31, r31
     c50:	e7 51       	subi	r30, 0x17	; 23
     c52:	ff 4f       	sbci	r31, 0xFF	; 255
     c54:	99 27       	eor	r25, r25
     c56:	33 27       	eor	r19, r19
     c58:	ee 24       	eor	r14, r14
     c5a:	ff 24       	eor	r15, r15
     c5c:	a7 01       	movw	r20, r14
     c5e:	e7 01       	movw	r28, r14
     c60:	05 90       	lpm	r0, Z+
     c62:	08 94       	sec
     c64:	07 94       	ror	r0
     c66:	28 f4       	brcc	.+10     	; 0xc72 <__ftoa_engine+0x80>
     c68:	36 0f       	add	r19, r22
     c6a:	e7 1e       	adc	r14, r23
     c6c:	f8 1e       	adc	r15, r24
     c6e:	49 1f       	adc	r20, r25
     c70:	51 1d       	adc	r21, r1
     c72:	66 0f       	add	r22, r22
     c74:	77 1f       	adc	r23, r23
     c76:	88 1f       	adc	r24, r24
     c78:	99 1f       	adc	r25, r25
     c7a:	06 94       	lsr	r0
     c7c:	a1 f7       	brne	.-24     	; 0xc66 <__ftoa_engine+0x74>
     c7e:	05 90       	lpm	r0, Z+
     c80:	07 94       	ror	r0
     c82:	28 f4       	brcc	.+10     	; 0xc8e <__ftoa_engine+0x9c>
     c84:	e7 0e       	add	r14, r23
     c86:	f8 1e       	adc	r15, r24
     c88:	49 1f       	adc	r20, r25
     c8a:	56 1f       	adc	r21, r22
     c8c:	c1 1d       	adc	r28, r1
     c8e:	77 0f       	add	r23, r23
     c90:	88 1f       	adc	r24, r24
     c92:	99 1f       	adc	r25, r25
     c94:	66 1f       	adc	r22, r22
     c96:	06 94       	lsr	r0
     c98:	a1 f7       	brne	.-24     	; 0xc82 <__ftoa_engine+0x90>
     c9a:	05 90       	lpm	r0, Z+
     c9c:	07 94       	ror	r0
     c9e:	28 f4       	brcc	.+10     	; 0xcaa <__ftoa_engine+0xb8>
     ca0:	f8 0e       	add	r15, r24
     ca2:	49 1f       	adc	r20, r25
     ca4:	56 1f       	adc	r21, r22
     ca6:	c7 1f       	adc	r28, r23
     ca8:	d1 1d       	adc	r29, r1
     caa:	88 0f       	add	r24, r24
     cac:	99 1f       	adc	r25, r25
     cae:	66 1f       	adc	r22, r22
     cb0:	77 1f       	adc	r23, r23
     cb2:	06 94       	lsr	r0
     cb4:	a1 f7       	brne	.-24     	; 0xc9e <__ftoa_engine+0xac>
     cb6:	05 90       	lpm	r0, Z+
     cb8:	07 94       	ror	r0
     cba:	20 f4       	brcc	.+8      	; 0xcc4 <__ftoa_engine+0xd2>
     cbc:	49 0f       	add	r20, r25
     cbe:	56 1f       	adc	r21, r22
     cc0:	c7 1f       	adc	r28, r23
     cc2:	d8 1f       	adc	r29, r24
     cc4:	99 0f       	add	r25, r25
     cc6:	66 1f       	adc	r22, r22
     cc8:	77 1f       	adc	r23, r23
     cca:	88 1f       	adc	r24, r24
     ccc:	06 94       	lsr	r0
     cce:	a9 f7       	brne	.-22     	; 0xcba <__ftoa_engine+0xc8>
     cd0:	84 91       	lpm	r24, Z+
     cd2:	10 95       	com	r17
     cd4:	17 70       	andi	r17, 0x07	; 7
     cd6:	41 f0       	breq	.+16     	; 0xce8 <__ftoa_engine+0xf6>
     cd8:	d6 95       	lsr	r29
     cda:	c7 95       	ror	r28
     cdc:	57 95       	ror	r21
     cde:	47 95       	ror	r20
     ce0:	f7 94       	ror	r15
     ce2:	e7 94       	ror	r14
     ce4:	1a 95       	dec	r17
     ce6:	c1 f7       	brne	.-16     	; 0xcd8 <__ftoa_engine+0xe6>
     ce8:	ef e8       	ldi	r30, 0x8F	; 143
     cea:	f0 e0       	ldi	r31, 0x00	; 0
     cec:	68 94       	set
     cee:	15 90       	lpm	r1, Z+
     cf0:	15 91       	lpm	r17, Z+
     cf2:	35 91       	lpm	r19, Z+
     cf4:	65 91       	lpm	r22, Z+
     cf6:	95 91       	lpm	r25, Z+
     cf8:	05 90       	lpm	r0, Z+
     cfa:	7f e2       	ldi	r23, 0x2F	; 47
     cfc:	73 95       	inc	r23
     cfe:	e1 18       	sub	r14, r1
     d00:	f1 0a       	sbc	r15, r17
     d02:	43 0b       	sbc	r20, r19
     d04:	56 0b       	sbc	r21, r22
     d06:	c9 0b       	sbc	r28, r25
     d08:	d0 09       	sbc	r29, r0
     d0a:	c0 f7       	brcc	.-16     	; 0xcfc <__ftoa_engine+0x10a>
     d0c:	e1 0c       	add	r14, r1
     d0e:	f1 1e       	adc	r15, r17
     d10:	43 1f       	adc	r20, r19
     d12:	56 1f       	adc	r21, r22
     d14:	c9 1f       	adc	r28, r25
     d16:	d0 1d       	adc	r29, r0
     d18:	7e f4       	brtc	.+30     	; 0xd38 <__ftoa_engine+0x146>
     d1a:	70 33       	cpi	r23, 0x30	; 48
     d1c:	11 f4       	brne	.+4      	; 0xd22 <__ftoa_engine+0x130>
     d1e:	8a 95       	dec	r24
     d20:	e6 cf       	rjmp	.-52     	; 0xcee <__ftoa_engine+0xfc>
     d22:	e8 94       	clt
     d24:	01 50       	subi	r16, 0x01	; 1
     d26:	30 f0       	brcs	.+12     	; 0xd34 <__ftoa_engine+0x142>
     d28:	08 0f       	add	r16, r24
     d2a:	0a f4       	brpl	.+2      	; 0xd2e <__ftoa_engine+0x13c>
     d2c:	00 27       	eor	r16, r16
     d2e:	02 17       	cp	r16, r18
     d30:	08 f4       	brcc	.+2      	; 0xd34 <__ftoa_engine+0x142>
     d32:	20 2f       	mov	r18, r16
     d34:	23 95       	inc	r18
     d36:	02 2f       	mov	r16, r18
     d38:	7a 33       	cpi	r23, 0x3A	; 58
     d3a:	28 f0       	brcs	.+10     	; 0xd46 <__ftoa_engine+0x154>
     d3c:	79 e3       	ldi	r23, 0x39	; 57
     d3e:	7d 93       	st	X+, r23
     d40:	2a 95       	dec	r18
     d42:	e9 f7       	brne	.-6      	; 0xd3e <__ftoa_engine+0x14c>
     d44:	10 c0       	rjmp	.+32     	; 0xd66 <__ftoa_engine+0x174>
     d46:	7d 93       	st	X+, r23
     d48:	2a 95       	dec	r18
     d4a:	89 f6       	brne	.-94     	; 0xcee <__ftoa_engine+0xfc>
     d4c:	06 94       	lsr	r0
     d4e:	97 95       	ror	r25
     d50:	67 95       	ror	r22
     d52:	37 95       	ror	r19
     d54:	17 95       	ror	r17
     d56:	17 94       	ror	r1
     d58:	e1 18       	sub	r14, r1
     d5a:	f1 0a       	sbc	r15, r17
     d5c:	43 0b       	sbc	r20, r19
     d5e:	56 0b       	sbc	r21, r22
     d60:	c9 0b       	sbc	r28, r25
     d62:	d0 09       	sbc	r29, r0
     d64:	98 f0       	brcs	.+38     	; 0xd8c <__ftoa_engine+0x19a>
     d66:	23 95       	inc	r18
     d68:	7e 91       	ld	r23, -X
     d6a:	73 95       	inc	r23
     d6c:	7a 33       	cpi	r23, 0x3A	; 58
     d6e:	08 f0       	brcs	.+2      	; 0xd72 <__ftoa_engine+0x180>
     d70:	70 e3       	ldi	r23, 0x30	; 48
     d72:	7c 93       	st	X, r23
     d74:	20 13       	cpse	r18, r16
     d76:	b8 f7       	brcc	.-18     	; 0xd66 <__ftoa_engine+0x174>
     d78:	7e 91       	ld	r23, -X
     d7a:	70 61       	ori	r23, 0x10	; 16
     d7c:	7d 93       	st	X+, r23
     d7e:	30 f0       	brcs	.+12     	; 0xd8c <__ftoa_engine+0x19a>
     d80:	83 95       	inc	r24
     d82:	71 e3       	ldi	r23, 0x31	; 49
     d84:	7d 93       	st	X+, r23
     d86:	70 e3       	ldi	r23, 0x30	; 48
     d88:	2a 95       	dec	r18
     d8a:	e1 f7       	brne	.-8      	; 0xd84 <__ftoa_engine+0x192>
     d8c:	11 24       	eor	r1, r1
     d8e:	ef 90       	pop	r14
     d90:	ff 90       	pop	r15
     d92:	0f 91       	pop	r16
     d94:	1f 91       	pop	r17
     d96:	cf 91       	pop	r28
     d98:	df 91       	pop	r29
     d9a:	99 27       	eor	r25, r25
     d9c:	87 fd       	sbrc	r24, 7
     d9e:	90 95       	com	r25
     da0:	08 95       	ret

00000da2 <strnlen_P>:
     da2:	fc 01       	movw	r30, r24
     da4:	05 90       	lpm	r0, Z+
     da6:	61 50       	subi	r22, 0x01	; 1
     da8:	70 40       	sbci	r23, 0x00	; 0
     daa:	01 10       	cpse	r0, r1
     dac:	d8 f7       	brcc	.-10     	; 0xda4 <strnlen_P+0x2>
     dae:	80 95       	com	r24
     db0:	90 95       	com	r25
     db2:	8e 0f       	add	r24, r30
     db4:	9f 1f       	adc	r25, r31
     db6:	08 95       	ret

00000db8 <strnlen>:
     db8:	fc 01       	movw	r30, r24
     dba:	61 50       	subi	r22, 0x01	; 1
     dbc:	70 40       	sbci	r23, 0x00	; 0
     dbe:	01 90       	ld	r0, Z+
     dc0:	01 10       	cpse	r0, r1
     dc2:	d8 f7       	brcc	.-10     	; 0xdba <strnlen+0x2>
     dc4:	80 95       	com	r24
     dc6:	90 95       	com	r25
     dc8:	8e 0f       	add	r24, r30
     dca:	9f 1f       	adc	r25, r31
     dcc:	08 95       	ret

00000dce <fputc>:
     dce:	0f 93       	push	r16
     dd0:	1f 93       	push	r17
     dd2:	cf 93       	push	r28
     dd4:	df 93       	push	r29
     dd6:	8c 01       	movw	r16, r24
     dd8:	eb 01       	movw	r28, r22
     dda:	8b 81       	ldd	r24, Y+3	; 0x03
     ddc:	81 ff       	sbrs	r24, 1
     dde:	1b c0       	rjmp	.+54     	; 0xe16 <fputc+0x48>
     de0:	82 ff       	sbrs	r24, 2
     de2:	0d c0       	rjmp	.+26     	; 0xdfe <fputc+0x30>
     de4:	2e 81       	ldd	r18, Y+6	; 0x06
     de6:	3f 81       	ldd	r19, Y+7	; 0x07
     de8:	8c 81       	ldd	r24, Y+4	; 0x04
     dea:	9d 81       	ldd	r25, Y+5	; 0x05
     dec:	28 17       	cp	r18, r24
     dee:	39 07       	cpc	r19, r25
     df0:	64 f4       	brge	.+24     	; 0xe0a <fputc+0x3c>
     df2:	e8 81       	ld	r30, Y
     df4:	f9 81       	ldd	r31, Y+1	; 0x01
     df6:	01 93       	st	Z+, r16
     df8:	f9 83       	std	Y+1, r31	; 0x01
     dfa:	e8 83       	st	Y, r30
     dfc:	06 c0       	rjmp	.+12     	; 0xe0a <fputc+0x3c>
     dfe:	e8 85       	ldd	r30, Y+8	; 0x08
     e00:	f9 85       	ldd	r31, Y+9	; 0x09
     e02:	80 2f       	mov	r24, r16
     e04:	09 95       	icall
     e06:	89 2b       	or	r24, r25
     e08:	31 f4       	brne	.+12     	; 0xe16 <fputc+0x48>
     e0a:	8e 81       	ldd	r24, Y+6	; 0x06
     e0c:	9f 81       	ldd	r25, Y+7	; 0x07
     e0e:	01 96       	adiw	r24, 0x01	; 1
     e10:	9f 83       	std	Y+7, r25	; 0x07
     e12:	8e 83       	std	Y+6, r24	; 0x06
     e14:	02 c0       	rjmp	.+4      	; 0xe1a <fputc+0x4c>
     e16:	0f ef       	ldi	r16, 0xFF	; 255
     e18:	1f ef       	ldi	r17, 0xFF	; 255
     e1a:	c8 01       	movw	r24, r16
     e1c:	df 91       	pop	r29
     e1e:	cf 91       	pop	r28
     e20:	1f 91       	pop	r17
     e22:	0f 91       	pop	r16
     e24:	08 95       	ret

00000e26 <printf_P>:
     e26:	a0 e0       	ldi	r26, 0x00	; 0
     e28:	b0 e0       	ldi	r27, 0x00	; 0
     e2a:	e9 e1       	ldi	r30, 0x19	; 25
     e2c:	f7 e0       	ldi	r31, 0x07	; 7
     e2e:	0c 94 dd 07 	jmp	0xfba	; 0xfba <__prologue_saves__+0x20>
     e32:	fe 01       	movw	r30, r28
     e34:	35 96       	adiw	r30, 0x05	; 5
     e36:	61 91       	ld	r22, Z+
     e38:	71 91       	ld	r23, Z+
     e3a:	a0 91 29 01 	lds	r26, 0x0129
     e3e:	b0 91 2a 01 	lds	r27, 0x012A
     e42:	13 96       	adiw	r26, 0x03	; 3
     e44:	8c 91       	ld	r24, X
     e46:	13 97       	sbiw	r26, 0x03	; 3
     e48:	88 60       	ori	r24, 0x08	; 8
     e4a:	13 96       	adiw	r26, 0x03	; 3
     e4c:	8c 93       	st	X, r24
     e4e:	80 91 29 01 	lds	r24, 0x0129
     e52:	90 91 2a 01 	lds	r25, 0x012A
     e56:	af 01       	movw	r20, r30
     e58:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <vfprintf>
     e5c:	e0 91 29 01 	lds	r30, 0x0129
     e60:	f0 91 2a 01 	lds	r31, 0x012A
     e64:	23 81       	ldd	r18, Z+3	; 0x03
     e66:	27 7f       	andi	r18, 0xF7	; 247
     e68:	23 83       	std	Z+3, r18	; 0x03
     e6a:	20 96       	adiw	r28, 0x00	; 0
     e6c:	e2 e0       	ldi	r30, 0x02	; 2
     e6e:	0c 94 f9 07 	jmp	0xff2	; 0xff2 <__epilogue_restores__+0x20>

00000e72 <__ultoa_invert>:
     e72:	fa 01       	movw	r30, r20
     e74:	aa 27       	eor	r26, r26
     e76:	28 30       	cpi	r18, 0x08	; 8
     e78:	51 f1       	breq	.+84     	; 0xece <__ultoa_invert+0x5c>
     e7a:	20 31       	cpi	r18, 0x10	; 16
     e7c:	81 f1       	breq	.+96     	; 0xede <__ultoa_invert+0x6c>
     e7e:	e8 94       	clt
     e80:	6f 93       	push	r22
     e82:	6e 7f       	andi	r22, 0xFE	; 254
     e84:	6e 5f       	subi	r22, 0xFE	; 254
     e86:	7f 4f       	sbci	r23, 0xFF	; 255
     e88:	8f 4f       	sbci	r24, 0xFF	; 255
     e8a:	9f 4f       	sbci	r25, 0xFF	; 255
     e8c:	af 4f       	sbci	r26, 0xFF	; 255
     e8e:	b1 e0       	ldi	r27, 0x01	; 1
     e90:	3e d0       	rcall	.+124    	; 0xf0e <__ultoa_invert+0x9c>
     e92:	b4 e0       	ldi	r27, 0x04	; 4
     e94:	3c d0       	rcall	.+120    	; 0xf0e <__ultoa_invert+0x9c>
     e96:	67 0f       	add	r22, r23
     e98:	78 1f       	adc	r23, r24
     e9a:	89 1f       	adc	r24, r25
     e9c:	9a 1f       	adc	r25, r26
     e9e:	a1 1d       	adc	r26, r1
     ea0:	68 0f       	add	r22, r24
     ea2:	79 1f       	adc	r23, r25
     ea4:	8a 1f       	adc	r24, r26
     ea6:	91 1d       	adc	r25, r1
     ea8:	a1 1d       	adc	r26, r1
     eaa:	6a 0f       	add	r22, r26
     eac:	71 1d       	adc	r23, r1
     eae:	81 1d       	adc	r24, r1
     eb0:	91 1d       	adc	r25, r1
     eb2:	a1 1d       	adc	r26, r1
     eb4:	20 d0       	rcall	.+64     	; 0xef6 <__ultoa_invert+0x84>
     eb6:	09 f4       	brne	.+2      	; 0xeba <__ultoa_invert+0x48>
     eb8:	68 94       	set
     eba:	3f 91       	pop	r19
     ebc:	2a e0       	ldi	r18, 0x0A	; 10
     ebe:	26 9f       	mul	r18, r22
     ec0:	11 24       	eor	r1, r1
     ec2:	30 19       	sub	r19, r0
     ec4:	30 5d       	subi	r19, 0xD0	; 208
     ec6:	31 93       	st	Z+, r19
     ec8:	de f6       	brtc	.-74     	; 0xe80 <__ultoa_invert+0xe>
     eca:	cf 01       	movw	r24, r30
     ecc:	08 95       	ret
     ece:	46 2f       	mov	r20, r22
     ed0:	47 70       	andi	r20, 0x07	; 7
     ed2:	40 5d       	subi	r20, 0xD0	; 208
     ed4:	41 93       	st	Z+, r20
     ed6:	b3 e0       	ldi	r27, 0x03	; 3
     ed8:	0f d0       	rcall	.+30     	; 0xef8 <__ultoa_invert+0x86>
     eda:	c9 f7       	brne	.-14     	; 0xece <__ultoa_invert+0x5c>
     edc:	f6 cf       	rjmp	.-20     	; 0xeca <__ultoa_invert+0x58>
     ede:	46 2f       	mov	r20, r22
     ee0:	4f 70       	andi	r20, 0x0F	; 15
     ee2:	40 5d       	subi	r20, 0xD0	; 208
     ee4:	4a 33       	cpi	r20, 0x3A	; 58
     ee6:	18 f0       	brcs	.+6      	; 0xeee <__ultoa_invert+0x7c>
     ee8:	49 5d       	subi	r20, 0xD9	; 217
     eea:	31 fd       	sbrc	r19, 1
     eec:	40 52       	subi	r20, 0x20	; 32
     eee:	41 93       	st	Z+, r20
     ef0:	02 d0       	rcall	.+4      	; 0xef6 <__ultoa_invert+0x84>
     ef2:	a9 f7       	brne	.-22     	; 0xede <__ultoa_invert+0x6c>
     ef4:	ea cf       	rjmp	.-44     	; 0xeca <__ultoa_invert+0x58>
     ef6:	b4 e0       	ldi	r27, 0x04	; 4
     ef8:	a6 95       	lsr	r26
     efa:	97 95       	ror	r25
     efc:	87 95       	ror	r24
     efe:	77 95       	ror	r23
     f00:	67 95       	ror	r22
     f02:	ba 95       	dec	r27
     f04:	c9 f7       	brne	.-14     	; 0xef8 <__ultoa_invert+0x86>
     f06:	00 97       	sbiw	r24, 0x00	; 0
     f08:	61 05       	cpc	r22, r1
     f0a:	71 05       	cpc	r23, r1
     f0c:	08 95       	ret
     f0e:	9b 01       	movw	r18, r22
     f10:	ac 01       	movw	r20, r24
     f12:	0a 2e       	mov	r0, r26
     f14:	06 94       	lsr	r0
     f16:	57 95       	ror	r21
     f18:	47 95       	ror	r20
     f1a:	37 95       	ror	r19
     f1c:	27 95       	ror	r18
     f1e:	ba 95       	dec	r27
     f20:	c9 f7       	brne	.-14     	; 0xf14 <__ultoa_invert+0xa2>
     f22:	62 0f       	add	r22, r18
     f24:	73 1f       	adc	r23, r19
     f26:	84 1f       	adc	r24, r20
     f28:	95 1f       	adc	r25, r21
     f2a:	a0 1d       	adc	r26, r0
     f2c:	08 95       	ret

00000f2e <__udivmodhi4>:
     f2e:	aa 1b       	sub	r26, r26
     f30:	bb 1b       	sub	r27, r27
     f32:	51 e1       	ldi	r21, 0x11	; 17
     f34:	07 c0       	rjmp	.+14     	; 0xf44 <__udivmodhi4_ep>

00000f36 <__udivmodhi4_loop>:
     f36:	aa 1f       	adc	r26, r26
     f38:	bb 1f       	adc	r27, r27
     f3a:	a6 17       	cp	r26, r22
     f3c:	b7 07       	cpc	r27, r23
     f3e:	10 f0       	brcs	.+4      	; 0xf44 <__udivmodhi4_ep>
     f40:	a6 1b       	sub	r26, r22
     f42:	b7 0b       	sbc	r27, r23

00000f44 <__udivmodhi4_ep>:
     f44:	88 1f       	adc	r24, r24
     f46:	99 1f       	adc	r25, r25
     f48:	5a 95       	dec	r21
     f4a:	a9 f7       	brne	.-22     	; 0xf36 <__udivmodhi4_loop>
     f4c:	80 95       	com	r24
     f4e:	90 95       	com	r25
     f50:	bc 01       	movw	r22, r24
     f52:	cd 01       	movw	r24, r26
     f54:	08 95       	ret

00000f56 <__udivmodsi4>:
     f56:	a1 e2       	ldi	r26, 0x21	; 33
     f58:	1a 2e       	mov	r1, r26
     f5a:	aa 1b       	sub	r26, r26
     f5c:	bb 1b       	sub	r27, r27
     f5e:	fd 01       	movw	r30, r26
     f60:	0d c0       	rjmp	.+26     	; 0xf7c <__udivmodsi4_ep>

00000f62 <__udivmodsi4_loop>:
     f62:	aa 1f       	adc	r26, r26
     f64:	bb 1f       	adc	r27, r27
     f66:	ee 1f       	adc	r30, r30
     f68:	ff 1f       	adc	r31, r31
     f6a:	a2 17       	cp	r26, r18
     f6c:	b3 07       	cpc	r27, r19
     f6e:	e4 07       	cpc	r30, r20
     f70:	f5 07       	cpc	r31, r21
     f72:	20 f0       	brcs	.+8      	; 0xf7c <__udivmodsi4_ep>
     f74:	a2 1b       	sub	r26, r18
     f76:	b3 0b       	sbc	r27, r19
     f78:	e4 0b       	sbc	r30, r20
     f7a:	f5 0b       	sbc	r31, r21

00000f7c <__udivmodsi4_ep>:
     f7c:	66 1f       	adc	r22, r22
     f7e:	77 1f       	adc	r23, r23
     f80:	88 1f       	adc	r24, r24
     f82:	99 1f       	adc	r25, r25
     f84:	1a 94       	dec	r1
     f86:	69 f7       	brne	.-38     	; 0xf62 <__udivmodsi4_loop>
     f88:	60 95       	com	r22
     f8a:	70 95       	com	r23
     f8c:	80 95       	com	r24
     f8e:	90 95       	com	r25
     f90:	9b 01       	movw	r18, r22
     f92:	ac 01       	movw	r20, r24
     f94:	bd 01       	movw	r22, r26
     f96:	cf 01       	movw	r24, r30
     f98:	08 95       	ret

00000f9a <__prologue_saves__>:
     f9a:	2f 92       	push	r2
     f9c:	3f 92       	push	r3
     f9e:	4f 92       	push	r4
     fa0:	5f 92       	push	r5
     fa2:	6f 92       	push	r6
     fa4:	7f 92       	push	r7
     fa6:	8f 92       	push	r8
     fa8:	9f 92       	push	r9
     faa:	af 92       	push	r10
     fac:	bf 92       	push	r11
     fae:	cf 92       	push	r12
     fb0:	df 92       	push	r13
     fb2:	ef 92       	push	r14
     fb4:	ff 92       	push	r15
     fb6:	0f 93       	push	r16
     fb8:	1f 93       	push	r17
     fba:	cf 93       	push	r28
     fbc:	df 93       	push	r29
     fbe:	cd b7       	in	r28, 0x3d	; 61
     fc0:	de b7       	in	r29, 0x3e	; 62
     fc2:	ca 1b       	sub	r28, r26
     fc4:	db 0b       	sbc	r29, r27
     fc6:	0f b6       	in	r0, 0x3f	; 63
     fc8:	f8 94       	cli
     fca:	de bf       	out	0x3e, r29	; 62
     fcc:	0f be       	out	0x3f, r0	; 63
     fce:	cd bf       	out	0x3d, r28	; 61
     fd0:	09 94       	ijmp

00000fd2 <__epilogue_restores__>:
     fd2:	2a 88       	ldd	r2, Y+18	; 0x12
     fd4:	39 88       	ldd	r3, Y+17	; 0x11
     fd6:	48 88       	ldd	r4, Y+16	; 0x10
     fd8:	5f 84       	ldd	r5, Y+15	; 0x0f
     fda:	6e 84       	ldd	r6, Y+14	; 0x0e
     fdc:	7d 84       	ldd	r7, Y+13	; 0x0d
     fde:	8c 84       	ldd	r8, Y+12	; 0x0c
     fe0:	9b 84       	ldd	r9, Y+11	; 0x0b
     fe2:	aa 84       	ldd	r10, Y+10	; 0x0a
     fe4:	b9 84       	ldd	r11, Y+9	; 0x09
     fe6:	c8 84       	ldd	r12, Y+8	; 0x08
     fe8:	df 80       	ldd	r13, Y+7	; 0x07
     fea:	ee 80       	ldd	r14, Y+6	; 0x06
     fec:	fd 80       	ldd	r15, Y+5	; 0x05
     fee:	0c 81       	ldd	r16, Y+4	; 0x04
     ff0:	1b 81       	ldd	r17, Y+3	; 0x03
     ff2:	aa 81       	ldd	r26, Y+2	; 0x02
     ff4:	b9 81       	ldd	r27, Y+1	; 0x01
     ff6:	ce 0f       	add	r28, r30
     ff8:	d1 1d       	adc	r29, r1
     ffa:	0f b6       	in	r0, 0x3f	; 63
     ffc:	f8 94       	cli
     ffe:	de bf       	out	0x3e, r29	; 62
    1000:	0f be       	out	0x3f, r0	; 63
    1002:	cd bf       	out	0x3d, r28	; 61
    1004:	ed 01       	movw	r28, r26
    1006:	08 95       	ret

00001008 <_exit>:
    1008:	f8 94       	cli

0000100a <__stop_program>:
    100a:	ff cf       	rjmp	.-2      	; 0x100a <__stop_program>
